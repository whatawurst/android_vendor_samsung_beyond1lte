<?xml version="1.0" encoding="utf-8"?>
<graph id="stage123">
    <skipstages>
        <!-- setting for Samsung OpenVX Framework -->
        <skip_stage_list flags="SVX_STAGE_SKIP_UPDATE_GST" />
        <skip_stage_list flags="SVX_STAGE_SKIP_ROI_TEST" />
    </skipstages>
    <nodes>
        <!-- Nodes: -->
        <!-- Still ENF Nodes. -->
        <still_enf_node_slice0 id="0" />
        <still_enf_signal id="1" />
        <still_enf_node_slice1 id="2" />
        <still_enf_node_slice2 id="3" />
        <still_enf_node_slice3 id="4" />
        <still_enf_node_slice4 id="5" />
        <still_enf_uv_node id="6" />
        <!-- Still SCL Nodes. -->
        <still_scl_node_slice0 id="7" />
        <still_scl_node_slice1 id="8" />
        <still_scl_node_slice2 id="9" />
        <still_scl_node_slice3 id="10" />
        <still_scl_uv_node id="11" />
        <!-- Still Pyramid Nodes. -->
        <still_pyr_node_l1_slice0 id="12" />
        <still_pyr_node_l1_slice1 id="13" />
        <still_pyr_node_l1_slice2 id="14" />
        <still_pyr_node_l1_slice3 id="15" />
        <still_pyr_node_l2_slice0 id="16" />
        <!-- Still ORBMCH Scale 2 Nodes. -->
        <still_vcm_orb_l1_region_0 id="17" />
        <still_mch_l1_region_0_frame0 id="18" />
        <still_mch_l1_region_0_frame1 id="19" />
        <still_mch_l1_region_0_frame2 id="20" />
        <still_mch_l1_region_0_frame3 id="21" />
        <still_vcm_orb_l1_region_1 id="22" />
        <still_mch_l1_region_1_frame0 id="23" />
        <still_mch_l1_region_1_frame1 id="24" />
        <still_mch_l1_region_1_frame2 id="25" />
        <still_mch_l1_region_1_frame3 id="26" />
        <still_vcm_orb_l1_region_2 id="27" />
        <still_mch_l1_region_2_frame0 id="28" />
        <still_mch_l1_region_2_frame1 id="29" />
        <still_mch_l1_region_2_frame2 id="30" />
        <still_mch_l1_region_2_frame3 id="31" />
        <still_vcm_orb_l1_region_3 id="32" />
        <still_mch_l1_region_3_frame0 id="33" />
        <still_mch_l1_region_3_frame1 id="34" />
        <still_mch_l1_region_3_frame2 id="35" />
        <still_mch_l1_region_3_frame3 id="36" />
        <still_vcm_orb_l1_region_4 id="37" />
        <still_mch_l1_region_4_frame0 id="38" />
        <still_mch_l1_region_4_frame1 id="39" />
        <still_mch_l1_region_4_frame2 id="40" />
        <still_mch_l1_region_4_frame3 id="41" />
        <still_vcm_orb_l1_region_5 id="42" />
        <still_mch_l1_region_5_frame0 id="43" />
        <still_mch_l1_region_5_frame1 id="44" />
        <still_mch_l1_region_5_frame2 id="45" />
        <still_mch_l1_region_5_frame3 id="46" />
        <still_vcm_orb_l1_region_6 id="47" />
        <still_mch_l1_region_6_frame0 id="48" />
        <still_mch_l1_region_6_frame1 id="49" />
        <still_mch_l1_region_6_frame2 id="50" />
        <still_mch_l1_region_6_frame3 id="51" />
        <still_vcm_orb_l1_region_7 id="52" />
        <still_mch_l1_region_7_frame0 id="53" />
        <still_mch_l1_region_7_frame1 id="54" />
        <still_mch_l1_region_7_frame2 id="55" />
        <still_mch_l1_region_7_frame3 id="56" />
        <!-- Still ORBMCH Scale 8 Nodes. -->
        <still_vcm_orb_l2_region_0 id="57" />
        <still_mch_l2_region_0_frame0 id="58" />
        <still_mch_l2_region_0_frame1 id="59" />
        <still_mch_l2_region_0_frame2 id="60" />
        <still_mch_l2_region_0_frame3 id="61" />
        <!-- Tracking Callback Nodes -->
        <still_pyramid_cb id="62" />
        <still_mch_cb id="63" />
        <!-- Still WIG Nodes. -->
        <still_wig_node_computation0 id="64" />
        <still_wig_node0 id="65" />
        <still_wig_cb0 id="66" />
        <still_wig_node_computation1 id="67" />
        <still_wig_node1 id="68" />
        <still_wig_cb1 id="69" />
        <still_wig_node_computation2 id="70" />
        <still_wig_node2 id="71" />
        <still_wig_cb2 id="72" />
        <still_wig_node_computation3 id="73" />
        <still_wig_node3 id="74" />
        <still_wig_cb3 id="75" />
        <still_wig_node_computation4 id="76" />
        <still_wig_node4 id="77" />
        <still_wig_cb4 id="78" />
        <!-- Still MFB Nodes. -->
        <still_mfb_node id="79" />
    </nodes>

    <buffers>
        <!-- DDR Buffers: -->
        <!-- Still ENF Buffers. -->
        <ddr_buffer id="ddr_still_enf_input_slice_0" node="still_enf_node_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_0" node="still_enf_node_slice0" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_0" node="still_enf_node_slice0" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_cfg" node="still_enf_node_slice0" param_idx="2"  />
        <ddr_buffer id="ddr_still_enf_input_slice_1" node="still_enf_node_slice1" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_1" node="still_enf_node_slice1" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_1" node="still_enf_node_slice1" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_input_slice_2" node="still_enf_node_slice2" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_2" node="still_enf_node_slice2" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_2" node="still_enf_node_slice2" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_input_slice_3" node="still_enf_node_slice3" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_3" node="still_enf_node_slice3" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_3" node="still_enf_node_slice3" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_input_slice_4" node="still_enf_node_slice4" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_4" node="still_enf_node_slice4" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_4" node="still_enf_node_slice4" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_uv_input" node="still_enf_uv_node" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_u_out" node="still_enf_uv_node" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_v_out" node="still_enf_uv_node" param_idx="6"  />
        <ddr_buffer id="ddr_still_enf_uv_mot" node="still_enf_uv_node" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_uv_cfg" node="still_enf_uv_node" param_idx="2"  />
        <!-- Still SCL Buffers. -->
        <ddr_buffer id="ddr_still_scl_input_slice_0" node="still_scl_node_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_scl_out_slice_0" node="still_scl_node_slice0" param_idx="7"  />
        <ddr_buffer id="ddr_still_scl_input_slice_1" node="still_scl_node_slice1" param_idx="0"  />
        <ddr_buffer id="ddr_still_scl_out_slice_1" node="still_scl_node_slice1" param_idx="7"  />
        <ddr_buffer id="ddr_still_scl_input_slice_2" node="still_scl_node_slice2" param_idx="0"  />
        <ddr_buffer id="ddr_still_scl_out_slice_2" node="still_scl_node_slice2" param_idx="7"  />
        <ddr_buffer id="ddr_still_scl_input_slice_3" node="still_scl_node_slice3" param_idx="0"  />
        <ddr_buffer id="ddr_still_scl_out_slice_3" node="still_scl_node_slice3" param_idx="7"  />
        <ddr_buffer id="ddr_still_scl_uv_input_u" node="still_scl_uv_node" param_idx="0"  />
        <ddr_buffer id="ddr_still_scl_uv_input_v" node="still_scl_uv_node" param_idx="1"  />
        <ddr_buffer id="ddr_still_scl_uv_output" node="still_scl_uv_node" param_idx="8"  />
        <!-- Still Pyramid Buffers. -->
        <ddr_buffer id="ddr_still_pyr_in_l1_slice0" node="still_pyr_node_l1_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice0" node="still_pyr_node_l1_slice0" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice1" node="still_pyr_node_l1_slice1" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice1" node="still_pyr_node_l1_slice1" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice2" node="still_pyr_node_l1_slice2" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice2" node="still_pyr_node_l1_slice2" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice3" node="still_pyr_node_l1_slice3" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice3" node="still_pyr_node_l1_slice3" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_coeff_l2" node="still_pyr_node_l2_slice0" param_idx="4"  />
        <ddr_buffer id="ddr_still_pyr_in_l2_slice0" node="still_pyr_node_l2_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l2_slice0" node="still_pyr_node_l2_slice0" param_idx="7"  />
        <!-- Still ORBMCH Buffers. -->
        <ddr_buffer id="ddr_still_orb_image_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_db" node="still_mch_l1_region_0_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_query" node="still_mch_l1_region_0_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_out" node="still_mch_l1_region_0_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame1_query" node="still_mch_l1_region_0_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame1_out" node="still_mch_l1_region_0_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame2_query" node="still_mch_l1_region_0_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame2_out" node="still_mch_l1_region_0_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame3_query" node="still_mch_l1_region_0_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame3_out" node="still_mch_l1_region_0_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_db" node="still_mch_l1_region_1_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_query" node="still_mch_l1_region_1_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_out" node="still_mch_l1_region_1_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame1_query" node="still_mch_l1_region_1_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame1_out" node="still_mch_l1_region_1_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame2_query" node="still_mch_l1_region_1_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame2_out" node="still_mch_l1_region_1_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame3_query" node="still_mch_l1_region_1_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame3_out" node="still_mch_l1_region_1_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_db" node="still_mch_l1_region_2_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_query" node="still_mch_l1_region_2_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_out" node="still_mch_l1_region_2_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame1_query" node="still_mch_l1_region_2_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame1_out" node="still_mch_l1_region_2_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame2_query" node="still_mch_l1_region_2_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame2_out" node="still_mch_l1_region_2_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame3_query" node="still_mch_l1_region_2_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame3_out" node="still_mch_l1_region_2_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_db" node="still_mch_l1_region_3_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_query" node="still_mch_l1_region_3_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_out" node="still_mch_l1_region_3_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame1_query" node="still_mch_l1_region_3_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame1_out" node="still_mch_l1_region_3_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame2_query" node="still_mch_l1_region_3_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame2_out" node="still_mch_l1_region_3_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame3_query" node="still_mch_l1_region_3_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame3_out" node="still_mch_l1_region_3_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_db" node="still_mch_l1_region_4_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_query" node="still_mch_l1_region_4_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_out" node="still_mch_l1_region_4_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame1_query" node="still_mch_l1_region_4_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame1_out" node="still_mch_l1_region_4_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame2_query" node="still_mch_l1_region_4_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame2_out" node="still_mch_l1_region_4_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame3_query" node="still_mch_l1_region_4_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame3_out" node="still_mch_l1_region_4_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_db" node="still_mch_l1_region_5_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_query" node="still_mch_l1_region_5_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_out" node="still_mch_l1_region_5_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame1_query" node="still_mch_l1_region_5_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame1_out" node="still_mch_l1_region_5_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame2_query" node="still_mch_l1_region_5_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame2_out" node="still_mch_l1_region_5_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame3_query" node="still_mch_l1_region_5_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame3_out" node="still_mch_l1_region_5_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_db" node="still_mch_l1_region_6_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_query" node="still_mch_l1_region_6_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_out" node="still_mch_l1_region_6_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame1_query" node="still_mch_l1_region_6_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame1_out" node="still_mch_l1_region_6_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame2_query" node="still_mch_l1_region_6_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame2_out" node="still_mch_l1_region_6_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame3_query" node="still_mch_l1_region_6_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame3_out" node="still_mch_l1_region_6_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_db" node="still_mch_l1_region_7_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_query" node="still_mch_l1_region_7_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_out" node="still_mch_l1_region_7_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame1_query" node="still_mch_l1_region_7_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame1_out" node="still_mch_l1_region_7_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame2_query" node="still_mch_l1_region_7_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame2_out" node="still_mch_l1_region_7_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame3_query" node="still_mch_l1_region_7_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame3_out" node="still_mch_l1_region_7_frame3" param_idx="2" transfer="both" />
        <!-- Still ORBMCH Buffers. -->
        <ddr_buffer id="ddr_still_orb_image_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_db" node="still_mch_l2_region_0_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_query" node="still_mch_l2_region_0_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_out" node="still_mch_l2_region_0_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame1_query" node="still_mch_l2_region_0_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame1_out" node="still_mch_l2_region_0_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame2_query" node="still_mch_l2_region_0_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame2_out" node="still_mch_l2_region_0_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame3_query" node="still_mch_l2_region_0_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame3_out" node="still_mch_l2_region_0_frame3" param_idx="2" transfer="both" />
        <!-- Still WIG Buffers. -->
        <ddr_buffer id="ddr_still_wig_input_y0" node="still_wig_node0" param_idx="0"  />
        <ddr_buffer id="ddr_still_wig_input_uv0" node="still_wig_node0" param_idx="1"  />
        <ddr_buffer id="ddr_still_wig_mesh_y_modified0" node="still_wig_node0" param_idx="3"  />
        <ddr_buffer id="ddr_still_wig_mesh_uv0" node="still_wig_node0" param_idx="4"  />
        <ddr_buffer id="ddr_still_wig_delta_config0" node="still_wig_node0" param_idx="5"  />
        <ddr_buffer id="ddr_still_wig_out_y0" node="still_wig_node0" param_idx="11"  />
        <ddr_buffer id="ddr_still_wig_out_uv0" node="still_wig_node0" param_idx="12"  />
        <ddr_buffer id="ddr_still_wig_input_y1" node="still_wig_node1" param_idx="0"  />
        <ddr_buffer id="ddr_still_wig_input_uv1" node="still_wig_node1" param_idx="1"  />
        <ddr_buffer id="ddr_still_wig_mesh_y_modified1" node="still_wig_node1" param_idx="3"  />
        <ddr_buffer id="ddr_still_wig_mesh_uv1" node="still_wig_node1" param_idx="4"  />
        <ddr_buffer id="ddr_still_wig_delta_config1" node="still_wig_node1" param_idx="5"  />
        <ddr_buffer id="ddr_still_wig_out_y1" node="still_wig_node1" param_idx="11"  />
        <ddr_buffer id="ddr_still_wig_out_uv1" node="still_wig_node1" param_idx="12"  />
        <ddr_buffer id="ddr_still_wig_input_y2" node="still_wig_node2" param_idx="0"  />
        <ddr_buffer id="ddr_still_wig_input_uv2" node="still_wig_node2" param_idx="1"  />
        <ddr_buffer id="ddr_still_wig_mesh_y_modified2" node="still_wig_node2" param_idx="3"  />
        <ddr_buffer id="ddr_still_wig_mesh_uv2" node="still_wig_node2" param_idx="4"  />
        <ddr_buffer id="ddr_still_wig_delta_config2" node="still_wig_node2" param_idx="5"  />
        <ddr_buffer id="ddr_still_wig_out_y2" node="still_wig_node2" param_idx="11"  />
        <ddr_buffer id="ddr_still_wig_out_uv2" node="still_wig_node2" param_idx="12"  />
        <ddr_buffer id="ddr_still_wig_input_y3" node="still_wig_node3" param_idx="0"  />
        <ddr_buffer id="ddr_still_wig_input_uv3" node="still_wig_node3" param_idx="1"  />
        <ddr_buffer id="ddr_still_wig_mesh_y_modified3" node="still_wig_node3" param_idx="3"  />
        <ddr_buffer id="ddr_still_wig_mesh_uv3" node="still_wig_node3" param_idx="4"  />
        <ddr_buffer id="ddr_still_wig_delta_config3" node="still_wig_node3" param_idx="5"  />
        <ddr_buffer id="ddr_still_wig_out_y3" node="still_wig_node3" param_idx="11"  />
        <ddr_buffer id="ddr_still_wig_out_uv3" node="still_wig_node3" param_idx="12"  />
        <ddr_buffer id="ddr_still_wig_input_y4" node="still_wig_node4" param_idx="0"  />
        <ddr_buffer id="ddr_still_wig_input_uv4" node="still_wig_node4" param_idx="1"  />
        <ddr_buffer id="ddr_still_wig_mesh_y_modified4" node="still_wig_node4" param_idx="3"  />
        <ddr_buffer id="ddr_still_wig_mesh_uv4" node="still_wig_node4" param_idx="4"  />
        <ddr_buffer id="ddr_still_wig_delta_config4" node="still_wig_node4" param_idx="5"  />
        <ddr_buffer id="ddr_still_wig_out_y4" node="still_wig_node4" param_idx="11"  />
        <ddr_buffer id="ddr_still_wig_out_uv4" node="still_wig_node4" param_idx="12"  />
        <!-- Still MFB Buffer -->
        <ddr_buffer id="input_y0_image" node="still_mfb_node" param_idx="0" />
        <ddr_buffer id="input_uv0_image" node="still_mfb_node" param_idx="1" />
        <ddr_buffer id="input_y1_image" node="still_mfb_node" param_idx="3" />
        <ddr_buffer id="input_uv1_image" node="still_mfb_node" param_idx="4" />
        <ddr_buffer id="input_y2_image" node="still_mfb_node" param_idx="6" />
        <ddr_buffer id="input_uv2_image" node="still_mfb_node" param_idx="7" />
        <ddr_buffer id="input_y3_image" node="still_mfb_node" param_idx="9" />
        <ddr_buffer id="input_uv3_image" node="still_mfb_node" param_idx="10" />
        <ddr_buffer id="input_y4_image" node="still_mfb_node" param_idx="12" />
        <ddr_buffer id="input_uv4_image" node="still_mfb_node" param_idx="13" />
        <ddr_buffer id="input_motmod_image" node="still_mfb_node" param_idx="17" />
        <ddr_buffer id="wmult_buff_image" node="still_mfb_node" param_idx="20" />
        <ddr_buffer id="refweight_buff_image" node="still_mfb_node" param_idx="21" />
        <ddr_buffer id="pgain_buff_image" node="still_mfb_node" param_idx="23" />
        <ddr_buffer id="poffset_buff_image" node="still_mfb_node" param_idx="24" />
        <ddr_buffer id="output_y_image_iva" node="still_mfb_node" param_idx="30" />
        <ddr_buffer id="output_uv_image_iva" node="still_mfb_node" param_idx="31" />
        <ddr_buffer id="output_mmap_image_iva" node="still_mfb_node" param_idx="33" />

        <!-- VCF buffers for Pyramid Node -->
        <vcf_buffer id="vcf_pyr0_in_still" addr="0x37040" size="0x3600" />
        <vcf_buffer id="vcf_pyr0_out" addr="0x68640" size="0x1700" />
        <vcf_buffer id="vcf_pyr0_coeff" addr="0x37040" size="0x200" />
        <vcf_buffer id="vcf_pyr1_in_still" addr="0x69d40" size="0x3600" />
        <vcf_buffer id="vcf_pyr1_out" addr="0x3a640" size="0x1700" />

        <!-- VCF Input buffers for ENF Node. -->
        <vcf_buffer id="vcf_enf_in" addr="0x00000" size="0x10000" />
        <vcf_buffer id="uv_enf_vcm_vcf_input0" addr="0x00000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input1" addr="0x07ec0" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input2" addr="0x10000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input3" addr="0x17ec0" size="0x7ec0" />

        <!-- VCF Motion Map buffers for ENF Node. -->
        <vcf_buffer id="vcf_enf_mot_still" addr="0x60000" size="0x1080" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still0" addr="0x60000" size="0x2220" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still1" addr="0x62220" size="0x2220" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still_dummy" addr="0x34e20" size="0x2220" />

        <!-- VCF buffer for ENF Config-->
        <vcf_buffer id="vcf_enf_cfg" addr="0x2FD80" size="0x0070" />

        <!-- VCF buffers for ENF Node VCM vals. -->
        <vcf_buffer id="uv_enf_vcm_vcf_buffer_still" addr="0x3bd40" size="0x2910" />

        <!-- VCF buffers for ENF Node Output. -->
        <vcf_buffer id="vcf_enf_out_still" addr="0x70000" size="0x10000" />
        <vcf_buffer id="vcf_enf_out_shift16_still" addr="0x70010" size="0x10000" />
        <vcf_buffer id="uv_enf_vcm_vcf_output0_still" addr="0x20000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output1_still" addr="0x27ec0" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output2_still" addr="0x70000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output3_still" addr="0x77ec0" size="0x7ec0" />

        <!-- VCF buffers for ORB Node Input. -->
        <vcf_buffer id="orb_vcm_vcf_input0" addr="0x40000" size="0x10000" />
        <vcf_buffer id="orb_vcm_vcf_input1" addr="0x50000" size="0x10000" />

        <!-- VCF buffers for ORB Node Output. -->
        <vcf_buffer id="orb_vcm_vcf_output0" addr="0x64440" size="0x1390" />
        <vcf_buffer id="orb_vcm_vcf_output1" addr="0x30000" size="0x2710" />

        <!-- VCF buffers for ORB VCM Vals. -->
        <vcf_buffer id="orb_vcm_vcf_buffer" addr="0x6d340" size="0x100" />

        <!-- Vcf buffers for MCH. -->
        <vcf_buffer id="vcf_mch_db" addr="0x657d0" size="0x2810" />
        <vcf_buffer id="vcf_mch_query" addr="0x32710" size="0x2810" />
        <vcf_buffer id="vcf_mch_out" addr="0x67fe0" size="0x760" />

        <!-- VCF buffers for Post SCL Y -->
        <vcf_buffer id="vcf_post_scl_y_in" addr="0x00000" size="0x10000" />
        <vcf_buffer id="vcf_post_scl_y_out" addr="0x20000" size="0x10000" />

        <!-- Vcf buffers for Post UV Scl. -->
        <vcf_buffer id="vcf_post_scl_u_input" addr="0x00000" size="0x16380" />
        <vcf_buffer id="vcf_post_scl_v_input" addr="0x16380" size="0x16380" />
        <vcf_buffer id="vcf_post_scl_u_output" addr="0x2c700" size="0x8C40" />
        <vcf_buffer id="vcf_post_scl_v_output" addr="0x35340" size="0x8C40" />

        <!-- VCM Wig Mesh -->
        <vcf_buffer id="vcf_vcm_mesh_in_y_ping" addr="0x00000" size="0x10000" />
        <vcf_buffer id="vcf_vcm_mesh_in_y_pong" addr="0x10000" size="0x10000" />
        <vcf_buffer id="vcf_vcm_mesh_in_u_ping" addr="0x20000" size="0x8000" />
        <vcf_buffer id="vcf_vcm_mesh_in_u_pong" addr="0x28000" size="0x8000" />
        <vcf_buffer id="vcf_vcm_mesh_in_v_ping" addr="0x30000" size="0x8000" />
        <vcf_buffer id="vcf_vcm_mesh_in_v_pong" addr="0x38000" size="0x8000" />
        <vcf_buffer id="vcf_vcm_mesh_luma_mesh_left_ping" addr="0x4c500" size="0x1000" />
        <vcf_buffer id="vcf_vcm_mesh_luma_mesh_left_pong" addr="0x4d500" size="0x1000" />
        <vcf_buffer id="vcf_vcm_mesh_chroma_mesh_left_ping" addr="0x4dd00" size="0x800" />
        <vcf_buffer id="vcf_vcm_mesh_chroma_mesh_left_pong" addr="0x4e500" size="0x800" />
        <vcf_buffer id="vcf_vcm_mesh_out_y_left_ping" addr="0x40000" size="0x6280" />
        <vcf_buffer id="vcf_vcm_mesh_out_y_left_pong" addr="0x50000" size="0x6280" />
        <vcf_buffer id="vcf_vcm_mesh_out_u_left_ping" addr="0x60000" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_u_left_pong" addr="0x63180" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_v_left_ping" addr="0x70000" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_v_left_pong" addr="0x73180" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_luma_mesh_right_ping" addr="0x5c500" size="0x1000" />
        <vcf_buffer id="vcf_vcm_mesh_luma_mesh_right_pong" addr="0x5d500" size="0x1000" />
        <vcf_buffer id="vcf_vcm_mesh_chroma_mesh_right_ping" addr="0x5dd00" size="0x800" />
        <vcf_buffer id="vcf_vcm_mesh_chroma_mesh_right_pong" addr="0x5e500" size="0x800" />
        <vcf_buffer id="vcf_vcm_mesh_out_y_right_ping" addr="0x46280" size="0x6280" />
        <vcf_buffer id="vcf_vcm_mesh_out_y_right_pong" addr="0x56280" size="0x6280" />
        <vcf_buffer id="vcf_vcm_mesh_out_u_right_ping" addr="0x66300" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_u_right_pong" addr="0x69480" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_v_right_ping" addr="0x76300" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_out_v_right_pong" addr="0x79480" size="0x3180" />
        <vcf_buffer id="vcf_vcm_mesh_vcm_static_vals" addr="0x7C600" size="256" />
        <vcf_buffer id="vcf_vcm_mesh_vcm_detla_vals" addr="0x7C700" size="640" />

        <!-- Vcf buffers for MFB -->
        <vcf_buffer id="MFB_VCF_VCM_VALS" addr="0x00000" size="0x15180" />
        <vcf_buffer id="MFB_VCF_BLD_IN_MOT_MOD_PING" addr="0x15180" size="0x6C0" />
        <vcf_buffer id="MFB_VCF_BLD_IN_MOT_MOD_PONG" addr="0x15840" size="0x6C0" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y0_PING" addr="0x15F00" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y1_PING" addr="0x1B900" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y2_PING" addr="0x21300" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y3_PING" addr="0x26D00" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y4_PING" addr="0x2C700" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y0_PONG" addr="0x32100" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y1_PONG" addr="0x37B00" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y2_PONG" addr="0x3D500" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y3_PONG" addr="0x42F00" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_Y4_PONG" addr="0x48900" size="0x5A00" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U0_PING" addr="0x4E300" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U1_PING" addr="0x4F980" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U2_PING" addr="0x51000" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U3_PING" addr="0x52680" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U4_PING" addr="0x53D00" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U0_PONG" addr="0x55380" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U1_PONG" addr="0x56A00" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U2_PONG" addr="0x58080" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U3_PONG" addr="0x59700" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_U4_PONG" addr="0x5AD80" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V0_PING" addr="0x5C400" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V1_PING" addr="0x5DA80" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V2_PING" addr="0x5F100" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V3_PING" addr="0x60780" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V4_PING" addr="0x61E00" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V0_PONG" addr="0x63480" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V1_PONG" addr="0x64B00" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V2_PONG" addr="0x66180" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V3_PONG" addr="0x67800" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_IN_V4_PONG" addr="0x68E80" size="0x1680" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_Y_PING" addr="0x6A500" size="0x4800" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_Y_PONG" addr="0x6ED00" size="0x4800" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_U_PING" addr="0x73500" size="0x1400" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_U_PONG" addr="0x74900" size="0x1400" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_V_PING" addr="0x75D00" size="0x1400" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_V_PONG" addr="0x77100" size="0x1400" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_MMAP_PING" addr="0x78500" size="0x1400" />
        <vcf_buffer id="MFB_VCF_BLD_OUT_MMAP_PONG" addr="0x79900" size="0x1400" />
    </buffers>

    <iva_table>
        <!-- Pyramid LVL 1 Slice 0 START -->
        <iva_entry id="loop_start_still_lvl1_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <triggers>
                still_pyr_lvl1_in_dma_slice_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice0
            </inputs>
            <outputs>
                vcf_pyr1_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                loop_start_still_lvl1_slice_0
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_in_still
            </inputs>
            <outputs>
                vcf_pyr1_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice0" dst_dimensions="ddr_still_pyr_out_l1_slice0" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_0
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_VDMA_CH8" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_0
            </depends>
            <triggers>
                still_loop_end_lvl1_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_0
            </depends>
            <triggers>
                still_loop_start_lvl1_slice_2, still_vcm_start_orb_region0
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 0 END -->

        <!-- Pyramid LVL 1 Slice 1 START -->
        <iva_entry id="still_loop_start_lvl1_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <triggers>
                still_pyr_lvl1_in_dma_slice_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice1
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_1
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice1" dst_dimensions="ddr_still_pyr_out_l1_slice1" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_1
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice1
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_1
            </depends>
            <triggers>
                still_loop_end_lvl1_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_1
            </depends>
            <triggers>
                still_loop_start_lvl1_slice_3, still_vcm_start_orb_region0, still_vcm_start_orb_region4,
                still_vcm_start_orb_region1, still_vcm_start_orb_region5
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 1 END -->

        <!-- Pyramid LVL 1 Slice 2 START -->
        <iva_entry id="still_loop_start_lvl1_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_loop_end_lvl1_0
            </depends>
            <triggers>
                still_pyr_lvl1_in_dma_slice_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice2
            </inputs>
            <outputs>
                vcf_pyr1_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_2
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_in_still
            </inputs>
            <outputs>
                vcf_pyr1_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice2" dst_dimensions="ddr_still_pyr_out_l1_slice2" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_2
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_VDMA_CH8" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice2
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_2
            </depends>
            <triggers>
                still_loop_end_lvl1_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_2
            </depends>
            <triggers>
                still_vcm_start_orb_region2, still_vcm_start_orb_region6
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 2 END -->


        <!-- Pyramid LVL 1 Slice 3 START -->
        <iva_entry id="still_loop_start_lvl1_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_pyr_lvl1_in_dma_slice_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice3
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_3
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice3" dst_dimensions="ddr_still_pyr_out_l1_slice3" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_3
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice3
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_3
            </depends>
            <triggers>
                still_loop_end_lvl1_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_3
            </depends>
            <triggers>
                still_pyr_lvl2_coeff, still_vcm_start_orb_region3, still_vcm_start_orb_region7
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 3 END -->

       <!-- DMA for Pyramid LVL 2 filter coefficients -->
        <iva_entry id="still_pyr_lvl2_coeff" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_pyr_coeff_l2
            </inputs>
            <outputs>
                vcf_pyr0_coeff
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_loop_start_lvl2
             </triggers>
         </iva_entry>

        <!-- Pyramid LVL 2 START -->
        <iva_entry id="still_loop_start_lvl2" parent="still_pyr_node_l2_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_pyr_lvl2_coeff
            </depends>
            <triggers>
                still_pyr_lvl2_in_dma
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_in_dma" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l2_slice0
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl2
            </depends>
            <triggers>
                still_pyr_lvl2_scl
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_scl" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l2_slice0" dst_dimensions="ddr_still_pyr_out_l2_slice0" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_BICUBIC" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl2_in_dma
            </depends>
            <triggers>
                still_pyr_lvl2_out_dma
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_out_dma" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l2_slice0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl2_scl
            </depends>
            <triggers>
                still_loop_end_lvl2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl2" parent="still_pyr_node_l2_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl2_out_dma
            </depends>
            <triggers>
                still_vcm_start_orb_l2_region0, still_pyramid_cb
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 2 END -->

        <!-- DMA for PRE ENF Config -->
        <iva_entry id="still_enf_cfg" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_cfg
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_enf_signal
            </depends>
            <triggers>
                still_loop_start_enf_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice0" parent="still_enf_node_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_enf_cfg
            </depends>
            <triggers>
                still_enf_dma_in_slice0, still_enf_dma_mot_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_0
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice0
            </depends>
            <triggers>
                still_enf_process_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_0
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice0
            </depends>
            <triggers>
                still_enf_process_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_0" />
            <depends>
                still_enf_dma_in_slice0, still_enf_dma_mot_slice0
            </depends>
            <triggers>
                still_enf_dma_out_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice0
            </depends>
            <triggers>
                still_loop_end_enf_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice0" parent="still_enf_node_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice0
            </depends>
            <triggers>
                still_loop_start_enf_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice1" parent="still_enf_node_slice1" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice0
            </depends>
            <triggers>
                still_enf_dma_in_slice1, still_enf_dma_mot_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_1
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice1
            </depends>
            <triggers>
                still_enf_process_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_1
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice1
            </depends>
            <triggers>
                still_enf_process_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_1" />
            <depends>
                still_enf_dma_in_slice1, still_enf_dma_mot_slice1
            </depends>
            <triggers>
                still_enf_dma_out_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_1
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice1
            </depends>
            <triggers>
                still_loop_end_enf_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice1" parent="still_enf_node_slice1" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice1
            </depends>
            <triggers>
                still_loop_start_enf_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice2" parent="still_enf_node_slice2" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice1
            </depends>
            <triggers>
                still_enf_dma_in_slice2, still_enf_dma_mot_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_2
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice2
            </depends>
            <triggers>
                still_enf_process_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_2
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice2
            </depends>
            <triggers>
                still_enf_process_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_2" />
            <depends>
                still_enf_dma_in_slice2, still_enf_dma_mot_slice2
            </depends>
            <triggers>
                still_enf_dma_out_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_2
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice2
            </depends>
            <triggers>
                still_loop_end_enf_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice2" parent="still_enf_node_slice2" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice2
            </depends>
            <triggers>
                still_loop_start_enf_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice3" parent="still_enf_node_slice3" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice2
            </depends>
            <triggers>
                still_enf_dma_in_slice3, still_enf_dma_mot_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_3
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice3
            </depends>
            <triggers>
                still_enf_process_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_3
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice3
            </depends>
            <triggers>
                still_enf_process_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_3" />
            <depends>
                still_enf_dma_in_slice3, still_enf_dma_mot_slice3
            </depends>
            <triggers>
                still_enf_dma_out_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_3
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice3
            </depends>
            <triggers>
                still_loop_end_enf_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice3" parent="still_enf_node_slice3" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice3
            </depends>
            <triggers>
                still_loop_start_enf_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice4" parent="still_enf_node_slice4" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice3
            </depends>
            <triggers>
                still_enf_dma_in_slice4, still_enf_dma_mot_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice4" parent="still_enf_node_slice4" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_4
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice4
            </depends>
            <triggers>
                still_enf_process_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice4" parent="still_enf_node_slice4" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_4
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice4
            </depends>
            <triggers>
                still_enf_process_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice4" parent="still_enf_node_slice4" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_4" />
            <depends>
                still_enf_dma_in_slice4, still_enf_dma_mot_slice4
            </depends>
            <triggers>
                still_enf_dma_out_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice4" parent="still_enf_node_slice4" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_4
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice4
            </depends>
            <triggers>
                still_loop_end_enf_slice4
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice4" parent="still_enf_node_slice4" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice4
            </depends>
            <triggers>
                still_vcm_start_enf_uv
            </triggers>
        </iva_entry>

        <iva_entry id="still_vcm_start_enf_uv" proc_id="VCM_START" parent="still_enf_uv_node" vcm_type="VCM_UV_ENF" full_config="true">
            <inputs>
                ddr_still_enf_uv_input, ddr_still_enf_uv_mot
            </inputs>
            <outputs>
                ddr_still_enf_u_out, ddr_still_enf_v_out
            </outputs>
            <depends>
                still_loop_end_enf_slice4
            </depends>
            <tile_config tile_width="188" tile_height="136"/>
            <node_config sched_id="1">
		<vdma_id>
		        4, 6, 14
		</vdma_id>
                <vcm_vcf_buffers>
                        uv_enf_vcm_vcf_input0, uv_enf_vcm_vcf_input1, uv_enf_vcm_vcf_input2, uv_enf_vcm_vcf_input3,
                        uv_enf_vcm_vcf_output0_still, uv_enf_vcm_vcf_output1_still, uv_enf_vcm_vcf_output2_still,
                        uv_enf_vcm_vcf_output3_still, uv_enf_vcm_vcf_buffer_still, uv_enf_vcm_vcf_mmap_still0
                        uv_enf_vcm_vcf_mmap_still1, uv_enf_vcm_vcf_mmap_still_dummy
                </vcm_vcf_buffers>
                <enf_config enf_params="ddr_still_enf_uv_cfg"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region0" proc_id="VCM_START" parent="still_vcm_orb_l1_region_0" vcm_type="VCM_ORB" full_config="true" >
            <inputs>
                ddr_still_orb_image_l1_region_0
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_0, ddr_still_orb_dsc_l1_region_0
            </outputs>
            <depends>
                still_loop_end_lvl1_0, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region4
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="0" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region4" proc_id="VCM_START" parent="still_vcm_orb_l1_region_4" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_4
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_4, ddr_still_orb_dsc_l1_region_4
            </outputs>
            <depends>
                still_vcm_start_orb_region0, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region1
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="0" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region1" proc_id="VCM_START" parent="still_vcm_orb_l1_region_1" vcm_type="VCM_ORB" full_config="false" >
            <inputs>
                ddr_still_orb_image_l1_region_1
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_1, ddr_still_orb_dsc_l1_region_1
            </outputs>
            <depends>
                still_vcm_start_orb_region4, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region5
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="118" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region5" proc_id="VCM_START" parent="still_vcm_orb_l1_region_5" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_5
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_5, ddr_still_orb_dsc_l1_region_5
            </outputs>
            <depends>
                still_vcm_start_orb_region1, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region2
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="118" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region2" proc_id="VCM_START" parent="still_vcm_orb_l1_region_2" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_2
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_2, ddr_still_orb_dsc_l1_region_2
            </outputs>
            <depends>
                still_vcm_start_orb_region5, still_loop_end_lvl1_2
            </depends>
            <triggers>
                still_vcm_start_orb_region6
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="236" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region6" proc_id="VCM_START" parent="still_vcm_orb_l1_region_6" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_6
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_6, ddr_still_orb_dsc_l1_region_6
            </outputs>
            <depends>
                still_vcm_start_orb_region2, still_loop_end_lvl1_2
            </depends>
            <triggers>
                still_vcm_start_orb_region3
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="236" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region3" proc_id="VCM_START" parent="still_vcm_orb_l1_region_3" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_3
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_3, ddr_still_orb_dsc_l1_region_3
            </outputs>
            <depends>
                still_vcm_start_orb_region6, still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_vcm_start_orb_region7
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="354" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region7" proc_id="VCM_START" parent="still_vcm_orb_l1_region_7" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_7
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_7, ddr_still_orb_dsc_l1_region_7
            </outputs>
            <depends>
                still_vcm_start_orb_region3, still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_vcm_start_orb_l2_region0
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="354" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_l2_region0" proc_id="VCM_START" parent="still_vcm_orb_l2_region_0" vcm_type="VCM_ORB" full_config="true">
            <inputs>
                ddr_still_orb_image_l2_region_0
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l2_region_0, ddr_still_orb_dsc_l2_region_0
            </outputs>
            <depends>
                still_vcm_start_orb_region7, still_loop_end_lvl2
            </depends>
            <triggers>
                still_dma_mch_region0_db, still_dma_mch_region0_frame0_query
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    7, 7, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x200000" y_scale="0x200000" x_offset="0" y_offset="0"/>
            </node_config>
        </iva_entry>

        <!-- MCH Entries. -->
        <!-- Start of Region 0 -->
        <!-- DMA for database of region0. -->
        <iva_entry id="still_dma_mch_region0_db" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_vcm_start_orb_l2_region0
            </depends>
            <triggers>
                still_mch_region0_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region0 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame0_query" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_vcm_start_orb_l2_region0
            </depends>
            <triggers>
                still_mch_region0_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame0" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_db, still_dma_mch_region0_frame0_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame0_out, still_dma_mch_region0_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame0_out" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame0
            </depends>
            <triggers>
                still_mch_region0_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame0 Loop. -->

        <!-- Loop for the MCH Region0 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame1_query" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame0
            </depends>
            <triggers>
                still_mch_region0_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame1" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame0_out, still_dma_mch_region0_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame1_out, still_dma_mch_region0_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame1_out" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame1
            </depends>
            <triggers>
                still_mch_region0_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame1 Loop. -->

        <!-- Loop for the MCH Region0 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame2_query" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame1
            </depends>
            <triggers>
                still_mch_region0_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame2" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame1_out, still_dma_mch_region0_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame2_out, still_dma_mch_region0_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame2_out" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame2
            </depends>
            <triggers>
                still_mch_region0_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame2 Loop. -->

        <!-- Loop for the MCH Region0 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame3_query" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame2
            </depends>
            <triggers>
                still_mch_region0_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame3" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame2_out, still_dma_mch_region0_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame3_out, still_dma_mch_region1_frame0_query, still_dma_mch_region1_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame3_out" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame3 Loop. -->
        <!-- End of Region 0 -->

        <!-- Start of Region1 -->
        <!-- DMA for database of region1. -->
        <iva_entry id="still_dma_mch_region1_db" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region1 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame0_query" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame0" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame3_out, still_dma_mch_region1_frame0_query, still_dma_mch_region1_db
            </depends>
            <triggers>
                still_dma_mch_region1_frame0_out, still_dma_mch_region1_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame0_out" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame0
            </depends>
            <triggers>
                still_mch_region1_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame0 Loop. -->

        <!-- Loop for the MCH Region1 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame1_query" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame0
            </depends>
            <triggers>
                still_mch_region1_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame1" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame0_out, still_dma_mch_region1_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame1_out, still_dma_mch_region1_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame1_out" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame1
            </depends>
            <triggers>
                still_mch_region1_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame1 Loop. -->

        <!-- Loop for the MCH Region1 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame2_query" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame1
            </depends>
            <triggers>
                still_mch_region1_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame2" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame1_out, still_dma_mch_region1_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame2_out, still_dma_mch_region1_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame2_out" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame2
            </depends>
            <triggers>
                still_mch_region1_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame2 Loop. -->

        <!-- Loop for the MCH Region1 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame3_query" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame2
            </depends>
            <triggers>
                still_mch_region1_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame3" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame2_out, still_dma_mch_region1_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame3_out, still_dma_mch_region2_frame0_query, still_dma_mch_region2_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame3_out" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame3 Loop. -->
        <!-- End of Region1 -->

        <!-- Start of Region2 -->
        <!-- DMA for database of region2. -->
        <iva_entry id="still_dma_mch_region2_db" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region2 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame0_query" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame0" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame3_out, still_dma_mch_region2_frame0_query, still_dma_mch_region2_db
            </depends>
            <triggers>
                still_dma_mch_region2_frame0_out, still_dma_mch_region2_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame0_out" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame0
            </depends>
            <triggers>
                still_mch_region2_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame0 Loop. -->

        <!-- Loop for the MCH Region2 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame1_query" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame0
            </depends>
            <triggers>
                still_mch_region2_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame1" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame0_out, still_dma_mch_region2_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame1_out, still_dma_mch_region2_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame1_out" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame1
            </depends>
            <triggers>
                still_mch_region2_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame2 Loop. -->

        <!-- Loop for the MCH Region2 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame2_query" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame1
            </depends>
            <triggers>
                still_mch_region2_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame2" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame1_out, still_dma_mch_region2_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame2_out, still_dma_mch_region2_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame2_out" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame2
            </depends>
            <triggers>
                still_mch_region2_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame2 Loop. -->

        <!-- Loop for the MCH Region2 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame3_query" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame2
            </depends>
            <triggers>
                still_mch_region2_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame3" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame2_out, still_dma_mch_region2_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame3_out, still_dma_mch_region3_frame0_query, still_dma_mch_region3_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame3_out" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame3 Loop. -->
        <!-- End of Region2 -->

        <!-- Start of Region3 -->
        <!-- DMA for database of region3. -->
        <iva_entry id="still_dma_mch_region3_db" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region3 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame0_query" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame0" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame3_out, still_dma_mch_region3_frame0_query, still_dma_mch_region3_db
            </depends>
            <triggers>
                still_dma_mch_region3_frame0_out, still_dma_mch_region3_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame0_out" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame0
            </depends>
            <triggers>
                still_mch_region3_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame0 Loop. -->

        <!-- Loop for the MCH Region3 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame1_query" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame0
            </depends>
            <triggers>
                still_mch_region3_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame1" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame0_out, still_dma_mch_region3_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame1_out, still_dma_mch_region3_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame1_out" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame1
            </depends>
            <triggers>
                still_mch_region3_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame1 Loop. -->

        <!-- Loop for the MCH Region3 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame2_query" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame1
            </depends>
            <triggers>
                still_mch_region3_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame2" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame1_out, still_dma_mch_region3_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame2_out, still_dma_mch_region3_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame2_out" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame2
            </depends>
            <triggers>
                still_mch_region3_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame2 Loop. -->

        <!-- Loop for the MCH Region3 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame3_query" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame2
            </depends>
            <triggers>
                still_mch_region3_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame3" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame2_out, still_dma_mch_region3_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame3_out, still_dma_mch_region4_frame0_query, still_dma_mch_region4_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame3_out" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame3 Loop. -->
        <!-- End of Region3 -->

        <!-- Start of Region4 -->
        <!-- DMA for database of region4. -->
        <iva_entry id="still_dma_mch_region4_db" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region4 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame0_query" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame0" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame3_out, still_dma_mch_region4_frame0_query, still_dma_mch_region4_db
            </depends>
            <triggers>
                still_dma_mch_region4_frame0_out, still_dma_mch_region4_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame0_out" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame0
            </depends>
            <triggers>
                still_mch_region4_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame0 Loop. -->

        <!-- Loop for the MCH Region4 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame1_query" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame0
            </depends>
            <triggers>
                still_mch_region4_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame1" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame0_out, still_dma_mch_region4_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame1_out, still_dma_mch_region4_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame1_out" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame1
            </depends>
            <triggers>
                still_mch_region4_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame1 Loop. -->

        <!-- Loop for the MCH Region4 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame2_query" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame1
            </depends>
            <triggers>
                still_mch_region4_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame2" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame1_out, still_dma_mch_region4_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame2_out, still_dma_mch_region4_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame2_out" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame2
            </depends>
            <triggers>
                still_mch_region4_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame2 Loop. -->

        <!-- Loop for the MCH Region4 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame3_query" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame2
            </depends>
            <triggers>
                still_mch_region4_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame3" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame2_out, still_dma_mch_region4_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame3_out, still_dma_mch_region5_frame0_query, still_dma_mch_region5_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame3_out" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame3 Loop. -->
        <!-- End of Region4 -->

        <!-- Start of Region5 -->
        <!-- DMA for database of region5. -->
        <iva_entry id="still_dma_mch_region5_db" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region5 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame0_query" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame0" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame3_out, still_dma_mch_region5_frame0_query, still_dma_mch_region5_db
            </depends>
            <triggers>
                still_dma_mch_region5_frame0_out, still_dma_mch_region5_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame0_out" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame0
            </depends>
            <triggers>
                still_mch_region5_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame0 Loop. -->

        <!-- Loop for the MCH Region5 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame1_query" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame0
            </depends>
            <triggers>
                still_mch_region5_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame1" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame0_out, still_dma_mch_region5_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame1_out, still_dma_mch_region5_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame1_out" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame1
            </depends>
            <triggers>
                still_mch_region5_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame1 Loop. -->

        <!-- Loop for the MCH Region5 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame2_query" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame1
            </depends>
            <triggers>
                still_mch_region5_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame2" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame1_out, still_dma_mch_region5_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame2_out, still_dma_mch_region5_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame2_out" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame2
            </depends>
            <triggers>
                still_mch_region5_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame2 Loop. -->

        <!-- Loop for the MCH Region5 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame3_query" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame2
            </depends>
            <triggers>
                still_mch_region5_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame3" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame2_out, still_dma_mch_region5_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame3_out, still_dma_mch_region6_frame0_query, still_dma_mch_region6_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame3_out" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame3 Loop. -->
        <!-- End of Region5 -->

        <!-- Start of Region6 -->
        <!-- DMA for database of region6. -->
        <iva_entry id="still_dma_mch_region6_db" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region6 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame0_query" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame0" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame3_out, still_dma_mch_region6_frame0_query, still_dma_mch_region6_db
            </depends>
            <triggers>
                still_dma_mch_region6_frame0_out, still_dma_mch_region6_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame0_out" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame0
            </depends>
            <triggers>
                still_mch_region6_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame0 Loop. -->

        <!-- Loop for the MCH Region6 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame1_query" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame0
            </depends>
            <triggers>
                still_mch_region6_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame1" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame0_out, still_dma_mch_region6_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame1_out, still_dma_mch_region6_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame1_out" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame1
            </depends>
            <triggers>
                still_mch_region6_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame1 Loop. -->

        <!-- Loop for the MCH Region6 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame2_query" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame1
            </depends>
            <triggers>
                still_mch_region6_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame2" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame1_out, still_dma_mch_region6_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame2_out, still_dma_mch_region6_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame2_out" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame2
            </depends>
            <triggers>
                still_mch_region6_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame2 Loop. -->

        <!-- Loop for the MCH Region6 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame3_query" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame2
            </depends>
            <triggers>
                still_mch_region6_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame3" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame2_out, still_dma_mch_region6_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame3_out, still_dma_mch_region7_frame0_query, still_dma_mch_region7_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame3_out" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame3 Loop. -->
        <!-- End of Region6 -->

        <!-- Start of Region7 -->
        <!-- DMA for database of region7. -->
        <iva_entry id="still_dma_mch_region7_db" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region7 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame0_query" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame0" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame3_out, still_dma_mch_region7_frame0_query, still_dma_mch_region7_db
            </depends>
            <triggers>
                still_dma_mch_region7_frame0_out, still_dma_mch_region7_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame0_out" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame0
            </depends>
            <triggers>
                still_mch_region7_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame0 Loop. -->

        <!-- Loop for the MCH Region7 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame1_query" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame0
            </depends>
            <triggers>
                still_mch_region7_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame1" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame0_out, still_dma_mch_region7_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame1_out, still_dma_mch_region7_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame1_out" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame1
            </depends>
            <triggers>
                still_mch_region7_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame1 Loop. -->

        <!-- Loop for the MCH Region7 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame2_query" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame1
            </depends>
            <triggers>
                still_mch_region7_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame2" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame1_out, still_dma_mch_region7_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame2_out, still_dma_mch_region7_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame2_out" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame2
            </depends>
            <triggers>
                still_mch_region7_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame2 Loop. -->

        <!-- Loop for the MCH Region7 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame3_query" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame2
            </depends>
            <triggers>
                still_mch_region7_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame3" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame2_out, still_dma_mch_region7_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame3_out, still_dma_mch_l2_region0_frame0_query, still_dma_mch_l2_region0_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame3_out" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame3 Loop. -->
        <!-- End of Region7 -->

        <!-- Start of l2_region0 -->
        <!-- DMA for database of l2_region0. -->
        <iva_entry id="still_dma_mch_l2_region0_db" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH l2_region0 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame0_query" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame0" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame3_out, still_dma_mch_l2_region0_frame0_query, still_dma_mch_l2_region0_db
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame0_out, still_dma_mch_l2_region0_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame0_out" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame0
            </depends>
            <triggers>
                still_mch_l2_region0_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame0 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame1_query" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame0
            </depends>
            <triggers>
                still_mch_l2_region0_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame1" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame0_out, still_dma_mch_l2_region0_frame1_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame1_out, still_dma_mch_l2_region0_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame1_out" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame1
            </depends>
            <triggers>
                still_mch_l2_region0_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame1 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame2_query" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame1
            </depends>
            <triggers>
                still_mch_l2_region0_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame2" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame1_out, still_dma_mch_l2_region0_frame2_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame2_out, still_dma_mch_l2_region0_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame2_out" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame2
            </depends>
            <triggers>
                still_mch_l2_region0_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame2 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame3_query" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame2
            </depends>
            <triggers>
                still_mch_l2_region0_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame3" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame2_out, still_dma_mch_l2_region0_frame3_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame3_out
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame3_out" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame3
            </depends>
            <triggers>
                still_mch_cb
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame3 Loop. -->
        <!-- End of l2_region0 -->

        <!-- Post SCL Luma0 Starts. -->
        <iva_entry id="still_scl_loop_start_0" parent="still_scl_node_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="48" tile_height="48" />
            <triggers>
                still_scl_in_dma_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_in_dma_0" parent="still_scl_node_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_scl_input_slice_0
            </inputs>
            <outputs>
                vcf_post_scl_y_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_scl_loop_start_0
            </depends>
            <triggers>
                still_scl_process_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_process_0" parent="still_scl_node_slice0" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_in
            </inputs>
            <outputs>
                vcf_post_scl_y_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_input_slice_0" dst_dimensions="ddr_still_scl_out_slice_0" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_STILL_BICUBIC" h_offset="0" v_offset="0"  h_ratio="61850" v_ratio="64080" />
            <depends>
                still_scl_in_dma_0
            </depends>
            <triggers>
                still_scl_out_dma_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_out_dma_0" parent="still_scl_node_slice0" proc_id="IVA_IP_VDMA_CH12" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_out
            </inputs>
            <outputs>
                ddr_still_scl_out_slice_0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_scl_process_0
            </depends>
            <triggers>
                still_scl_loop_end_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_loop_end_0" parent="still_scl_node_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_scl_out_dma_0
            </depends>
            <triggers>
                still_scl_loop_start_1
            </triggers>
        </iva_entry>
        <!-- Post SCL Luma 0 ends. -->

        <!-- Post SCL Luma 1 starts. -->
        <iva_entry id="still_scl_loop_start_1" parent="still_scl_node_slice1" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="48" tile_height="48" />
            <depends>
                still_scl_loop_end_0
            </depends>
            <triggers>
                still_scl_in_dma_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_in_dma_1" parent="still_scl_node_slice1" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_scl_input_slice_1
            </inputs>
            <outputs>
                vcf_post_scl_y_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_scl_loop_start_1
            </depends>
            <triggers>
                still_scl_process_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_process_1" parent="still_scl_node_slice1" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_in
            </inputs>
            <outputs>
                vcf_post_scl_y_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_input_slice_1" dst_dimensions="ddr_still_scl_out_slice_1" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_STILL_BICUBIC" h_offset="0" v_offset="0"  h_ratio="61850" v_ratio="64080" />
            <depends>
                still_scl_in_dma_1
            </depends>
            <triggers>
                still_scl_out_dma_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_out_dma_1" parent="still_scl_node_slice1" proc_id="IVA_IP_VDMA_CH12" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_out
            </inputs>
            <outputs>
                ddr_still_scl_out_slice_1
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_scl_process_1
            </depends>
            <triggers>
                still_scl_loop_end_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_loop_end_1" parent="still_scl_node_slice1" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_scl_out_dma_1
            </depends>
            <triggers>
                still_scl_loop_start_2
            </triggers>
        </iva_entry>
        <!-- Post SCL Luma 1 ends. -->

        <!-- Post SCL Luma 2 starts. -->
        <iva_entry id="still_scl_loop_start_2" parent="still_scl_node_slice2" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="48" tile_height="48" />
            <depends>
                still_scl_loop_end_1
            </depends>
            <triggers>
                still_scl_in_dma_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_in_dma_2" parent="still_scl_node_slice2" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_scl_input_slice_2
            </inputs>
            <outputs>
                vcf_post_scl_y_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_scl_loop_start_2
            </depends>
            <triggers>
                still_scl_process_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_process_2" parent="still_scl_node_slice2" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_in
            </inputs>
            <outputs>
                vcf_post_scl_y_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_input_slice_2" dst_dimensions="ddr_still_scl_out_slice_2" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_STILL_BICUBIC" h_offset="0" v_offset="0"  h_ratio="61850" v_ratio="64080" />
            <depends>
                still_scl_in_dma_2
            </depends>
            <triggers>
                still_scl_out_dma_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_out_dma_2" parent="still_scl_node_slice2" proc_id="IVA_IP_VDMA_CH12" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_out
            </inputs>
            <outputs>
                ddr_still_scl_out_slice_2
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_scl_process_2
            </depends>
            <triggers>
                still_scl_loop_end_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_loop_end_2" parent="still_scl_node_slice2" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_scl_out_dma_2
            </depends>
            <triggers>
                still_scl_loop_start_3
            </triggers>
        </iva_entry>
        <!-- Post SCL Luma 2 ends. -->

        <!-- Post SCL Luma 3 starts. -->
        <iva_entry id="still_scl_loop_start_3" parent="still_scl_node_slice3" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="48" tile_height="48" />
            <depends>
                still_scl_loop_end_2
            </depends>
            <triggers>
                still_scl_in_dma_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_in_dma_3" parent="still_scl_node_slice3" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_scl_input_slice_3
            </inputs>
            <outputs>
                vcf_post_scl_y_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_scl_loop_start_3
            </depends>
            <triggers>
                still_scl_process_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_process_3" parent="still_scl_node_slice3" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_in
            </inputs>
            <outputs>
                vcf_post_scl_y_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_input_slice_3" dst_dimensions="ddr_still_scl_out_slice_3" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_STILL_BICUBIC" h_offset="0" v_offset="0" h_ratio="61850" v_ratio="64080" />
            <depends>
                still_scl_in_dma_3
            </depends>
            <triggers>
                still_scl_out_dma_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_out_dma_3" parent="still_scl_node_slice3" proc_id="IVA_IP_VDMA_CH12" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_y_out
            </inputs>
            <outputs>
                ddr_still_scl_out_slice_3
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_scl_process_3
            </depends>
            <triggers>
                still_scl_loop_end_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_scl_loop_end_3" parent="still_scl_node_slice3" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_scl_out_dma_3
            </depends>
            <triggers>
                still_scl_uv
            </triggers>
        </iva_entry>
        <!-- Post SCL Luma 3 ends. -->

        <!-- Post Scl UV starts -->
        <iva_entry id="still_scl_uv" parent="still_scl_uv_node" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL">
            <depends>
		still_scl_loop_end_3
            </depends>
            <triggers>
                iva_scl_dma_in_u, iva_scl_dma_in_v
            </triggers>
        </iva_entry>

        <iva_entry id="iva_scl_dma_in_u" parent="still_scl_uv_node" proc_id="IVA_IP_VDMA_CH0" flags="IVA_FLOW_CONTROL">
            <inputs>
                ddr_still_scl_uv_input_u
            </inputs>
            <outputs>
                vcf_post_scl_u_input
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram"/>
            <depends>
                still_scl_uv
            </depends>
            <triggers>
                iva_scl_u
            </triggers>
        </iva_entry>

        <iva_entry id="iva_scl_dma_in_v" parent="still_scl_uv_node" proc_id="IVA_IP_VDMA_CH1" flags="IVA_FLOW_CONTROL">
            <inputs>
                ddr_still_scl_uv_input_v
            </inputs>
            <outputs>
                vcf_post_scl_v_input
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram"/>
            <depends>
                still_scl_uv
            </depends>
            <triggers>
                iva_scl_v
            </triggers>
        </iva_entry>

        <iva_entry id="iva_scl_u" parent="still_scl_uv_node" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_u_input
            </inputs>
            <outputs>
                vcf_post_scl_u_output
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_uv_input_u" dst_dimensions="ddr_still_scl_uv_output" scl_mode="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" vdma_port="0" />
            <depends>
                iva_scl_dma_in_u
            </depends>
            <triggers>
                iva_scl_dma_out
            </triggers>
        </iva_entry>

        <iva_entry id="iva_scl_v" parent="still_scl_uv_node" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_v_input
            </inputs>
            <outputs>
                vcf_post_scl_v_output
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_scl_uv_input_v" dst_dimensions="ddr_still_scl_uv_output" scl_mode="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" vdma_port="1" /> <!-- (1 << 4 | 1) -->
            <depends>
                iva_scl_dma_in_v
            </depends>
            <triggers>
                iva_scl_dma_out
            </triggers>
        </iva_entry>

        <iva_entry id="iva_scl_dma_out" parent="still_scl_uv_node" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_post_scl_u_output, vcf_post_scl_v_output
            </inputs>
            <outputs>
                ddr_still_scl_uv_output
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_inter_sram_to_dram"/>
            <depends>
                iva_scl_u, iva_scl_v
            </depends>
            <triggers>
                iva_uv_scl_loop_end
            </triggers>
        </iva_entry>

        <iva_entry id="iva_uv_scl_loop_end" parent="still_scl_uv_node" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL">
            <depends>
                iva_scl_dma_out
            </depends>
        </iva_entry>

        <iva_entry id="vcm_still_wig_mesh_start0" proc_id="VCM_START" parent="still_wig_node0" vcm_type="VCM_MESH" full_config="true" >
            <inputs>
                ddr_still_wig_input_y0, ddr_still_wig_input_uv0, ddr_still_wig_mesh_y_modified0,
                ddr_still_wig_mesh_uv0, ddr_still_wig_delta_config0
            </inputs>
            <outputs>
                ddr_still_wig_out_y0, ddr_still_wig_out_uv0
            </outputs>
            <depends>
                still_wig_node_computation0
            </depends>
            <triggers>
                still_wig_cb0
            </triggers>
            <tile_config tile_width="192" tile_height="192" />
            <node_config log_mesh_space="3" inter_mode="2" inter_mode_uv="1">
                <sched_id>
                    2, 3, 4
                </sched_id>
                <vdma_id>
                    6, 4, 7, 12, 15
                </vdma_id>
                <vcm_vcf_buffers>
                    vcf_vcm_mesh_in_y_ping, vcf_vcm_mesh_in_y_pong, vcf_vcm_mesh_in_u_ping, vcf_vcm_mesh_in_u_pong, vcf_vcm_mesh_in_v_ping, vcf_vcm_mesh_in_v_pong,
                    vcf_vcm_mesh_luma_mesh_left_ping, vcf_vcm_mesh_luma_mesh_left_pong, vcf_vcm_mesh_chroma_mesh_left_ping, vcf_vcm_mesh_chroma_mesh_left_pong,
                    vcf_vcm_mesh_out_y_left_ping, vcf_vcm_mesh_out_y_left_pong, vcf_vcm_mesh_out_u_left_ping, vcf_vcm_mesh_out_u_left_pong, vcf_vcm_mesh_out_v_left_ping, vcf_vcm_mesh_out_v_left_pong,
                    vcf_vcm_mesh_luma_mesh_right_ping, vcf_vcm_mesh_luma_mesh_right_pong, vcf_vcm_mesh_chroma_mesh_right_ping, vcf_vcm_mesh_chroma_mesh_right_pong,
                    vcf_vcm_mesh_out_y_right_ping, vcf_vcm_mesh_out_y_right_pong, vcf_vcm_mesh_out_u_right_ping, vcf_vcm_mesh_out_u_right_pong, vcf_vcm_mesh_out_v_right_ping, vcf_vcm_mesh_out_v_right_pong,
                    vcf_vcm_mesh_vcm_static_vals, vcf_vcm_mesh_vcm_detla_vals
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>

        <iva_entry id="vcm_still_wig_mesh_start1" proc_id="VCM_START" parent="still_wig_node1" vcm_type="VCM_MESH" full_config="true" >
            <inputs>
                ddr_still_wig_input_y1, ddr_still_wig_input_uv1, ddr_still_wig_mesh_y_modified1,
                ddr_still_wig_mesh_uv1, ddr_still_wig_delta_config1
            </inputs>
            <outputs>
                ddr_still_wig_out_y1, ddr_still_wig_out_uv1
            </outputs>
            <depends>
                still_wig_node_computation1
            </depends>
            <triggers>
                still_wig_cb1
            </triggers>
            <tile_config tile_width="192" tile_height="192" />
            <node_config log_mesh_space="3" inter_mode="2" inter_mode_uv="1">
                <sched_id>
                    2, 3, 4
                </sched_id>
                <vdma_id>
                    6, 4, 7, 12, 15
                </vdma_id>
                <vcm_vcf_buffers>
                    vcf_vcm_mesh_in_y_ping, vcf_vcm_mesh_in_y_pong, vcf_vcm_mesh_in_u_ping, vcf_vcm_mesh_in_u_pong, vcf_vcm_mesh_in_v_ping, vcf_vcm_mesh_in_v_pong,
                    vcf_vcm_mesh_luma_mesh_left_ping, vcf_vcm_mesh_luma_mesh_left_pong, vcf_vcm_mesh_chroma_mesh_left_ping, vcf_vcm_mesh_chroma_mesh_left_pong,
                    vcf_vcm_mesh_out_y_left_ping, vcf_vcm_mesh_out_y_left_pong, vcf_vcm_mesh_out_u_left_ping, vcf_vcm_mesh_out_u_left_pong, vcf_vcm_mesh_out_v_left_ping, vcf_vcm_mesh_out_v_left_pong,
                    vcf_vcm_mesh_luma_mesh_right_ping, vcf_vcm_mesh_luma_mesh_right_pong, vcf_vcm_mesh_chroma_mesh_right_ping, vcf_vcm_mesh_chroma_mesh_right_pong,
                    vcf_vcm_mesh_out_y_right_ping, vcf_vcm_mesh_out_y_right_pong, vcf_vcm_mesh_out_u_right_ping, vcf_vcm_mesh_out_u_right_pong, vcf_vcm_mesh_out_v_right_ping, vcf_vcm_mesh_out_v_right_pong,
                    vcf_vcm_mesh_vcm_static_vals, vcf_vcm_mesh_vcm_detla_vals
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>
        <iva_entry id="vcm_still_wig_mesh_start2" proc_id="VCM_START" parent="still_wig_node2" vcm_type="VCM_MESH" full_config="true" >
            <inputs>
                ddr_still_wig_input_y2, ddr_still_wig_input_uv2, ddr_still_wig_mesh_y_modified2,
                ddr_still_wig_mesh_uv2, ddr_still_wig_delta_config2
            </inputs>
            <outputs>
                ddr_still_wig_out_y2, ddr_still_wig_out_uv2
            </outputs>
            <depends>
                still_wig_node_computation2
            </depends>
            <triggers>
                still_wig_cb2
            </triggers>
            <tile_config tile_width="192" tile_height="192" />
            <node_config log_mesh_space="3" inter_mode="2" inter_mode_uv="1">
                <sched_id>
                    2, 3, 4
                </sched_id>
                <vdma_id>
                    6, 4, 7, 12, 15
                </vdma_id>
                <vcm_vcf_buffers>
                    vcf_vcm_mesh_in_y_ping, vcf_vcm_mesh_in_y_pong, vcf_vcm_mesh_in_u_ping, vcf_vcm_mesh_in_u_pong, vcf_vcm_mesh_in_v_ping, vcf_vcm_mesh_in_v_pong,
                    vcf_vcm_mesh_luma_mesh_left_ping, vcf_vcm_mesh_luma_mesh_left_pong, vcf_vcm_mesh_chroma_mesh_left_ping, vcf_vcm_mesh_chroma_mesh_left_pong,
                    vcf_vcm_mesh_out_y_left_ping, vcf_vcm_mesh_out_y_left_pong, vcf_vcm_mesh_out_u_left_ping, vcf_vcm_mesh_out_u_left_pong, vcf_vcm_mesh_out_v_left_ping, vcf_vcm_mesh_out_v_left_pong,
                    vcf_vcm_mesh_luma_mesh_right_ping, vcf_vcm_mesh_luma_mesh_right_pong, vcf_vcm_mesh_chroma_mesh_right_ping, vcf_vcm_mesh_chroma_mesh_right_pong,
                    vcf_vcm_mesh_out_y_right_ping, vcf_vcm_mesh_out_y_right_pong, vcf_vcm_mesh_out_u_right_ping, vcf_vcm_mesh_out_u_right_pong, vcf_vcm_mesh_out_v_right_ping, vcf_vcm_mesh_out_v_right_pong,
                    vcf_vcm_mesh_vcm_static_vals, vcf_vcm_mesh_vcm_detla_vals
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>
        <iva_entry id="vcm_still_wig_mesh_start3" proc_id="VCM_START" parent="still_wig_node3" vcm_type="VCM_MESH" full_config="true" >
            <inputs>
                ddr_still_wig_input_y3, ddr_still_wig_input_uv3, ddr_still_wig_mesh_y_modified3,
                ddr_still_wig_mesh_uv3, ddr_still_wig_delta_config3
            </inputs>
            <outputs>
                ddr_still_wig_out_y3, ddr_still_wig_out_uv3
            </outputs>
            <depends>
                still_wig_node_computation3
            </depends>
            <triggers>
                still_wig_cb3
            </triggers>
            <tile_config tile_width="192" tile_height="192" />
            <node_config log_mesh_space="3" inter_mode="2" inter_mode_uv="1">
                <sched_id>
                    2, 3, 4
                </sched_id>
                <vdma_id>
                    6, 4, 7, 12, 15
                </vdma_id>
                <vcm_vcf_buffers>
                    vcf_vcm_mesh_in_y_ping, vcf_vcm_mesh_in_y_pong, vcf_vcm_mesh_in_u_ping, vcf_vcm_mesh_in_u_pong, vcf_vcm_mesh_in_v_ping, vcf_vcm_mesh_in_v_pong,
                    vcf_vcm_mesh_luma_mesh_left_ping, vcf_vcm_mesh_luma_mesh_left_pong, vcf_vcm_mesh_chroma_mesh_left_ping, vcf_vcm_mesh_chroma_mesh_left_pong,
                    vcf_vcm_mesh_out_y_left_ping, vcf_vcm_mesh_out_y_left_pong, vcf_vcm_mesh_out_u_left_ping, vcf_vcm_mesh_out_u_left_pong, vcf_vcm_mesh_out_v_left_ping, vcf_vcm_mesh_out_v_left_pong,
                    vcf_vcm_mesh_luma_mesh_right_ping, vcf_vcm_mesh_luma_mesh_right_pong, vcf_vcm_mesh_chroma_mesh_right_ping, vcf_vcm_mesh_chroma_mesh_right_pong,
                    vcf_vcm_mesh_out_y_right_ping, vcf_vcm_mesh_out_y_right_pong, vcf_vcm_mesh_out_u_right_ping, vcf_vcm_mesh_out_u_right_pong, vcf_vcm_mesh_out_v_right_ping, vcf_vcm_mesh_out_v_right_pong,
                    vcf_vcm_mesh_vcm_static_vals, vcf_vcm_mesh_vcm_detla_vals
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>
        <iva_entry id="vcm_still_wig_mesh_start4" proc_id="VCM_START" parent="still_wig_node4" vcm_type="VCM_MESH" full_config="true" >
            <inputs>
                ddr_still_wig_input_y4, ddr_still_wig_input_uv4, ddr_still_wig_mesh_y_modified4,
                ddr_still_wig_mesh_uv4, ddr_still_wig_delta_config4
            </inputs>
            <outputs>
                ddr_still_wig_out_y4, ddr_still_wig_out_uv4
            </outputs>
            <depends>
                still_wig_node_computation4
            </depends>
            <triggers>
                still_wig_cb4
            </triggers>
            <tile_config tile_width="192" tile_height="192" />
            <node_config log_mesh_space="3" inter_mode="2" inter_mode_uv="1">
                <sched_id>
                    2, 3, 4
                </sched_id>
                <vdma_id>
                    6, 4, 7, 12, 15
                </vdma_id>
                <vcm_vcf_buffers>
                    vcf_vcm_mesh_in_y_ping, vcf_vcm_mesh_in_y_pong, vcf_vcm_mesh_in_u_ping, vcf_vcm_mesh_in_u_pong, vcf_vcm_mesh_in_v_ping, vcf_vcm_mesh_in_v_pong,
                    vcf_vcm_mesh_luma_mesh_left_ping, vcf_vcm_mesh_luma_mesh_left_pong, vcf_vcm_mesh_chroma_mesh_left_ping, vcf_vcm_mesh_chroma_mesh_left_pong,
                    vcf_vcm_mesh_out_y_left_ping, vcf_vcm_mesh_out_y_left_pong, vcf_vcm_mesh_out_u_left_ping, vcf_vcm_mesh_out_u_left_pong, vcf_vcm_mesh_out_v_left_ping, vcf_vcm_mesh_out_v_left_pong,
                    vcf_vcm_mesh_luma_mesh_right_ping, vcf_vcm_mesh_luma_mesh_right_pong, vcf_vcm_mesh_chroma_mesh_right_ping, vcf_vcm_mesh_chroma_mesh_right_pong,
                    vcf_vcm_mesh_out_y_right_ping, vcf_vcm_mesh_out_y_right_pong, vcf_vcm_mesh_out_u_right_ping, vcf_vcm_mesh_out_u_right_pong, vcf_vcm_mesh_out_v_right_ping, vcf_vcm_mesh_out_v_right_pong,
                    vcf_vcm_mesh_vcm_static_vals, vcf_vcm_mesh_vcm_detla_vals
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>

        <iva_entry id="vcm_start_mfb" proc_id="VCM_START" parent="still_mfb_node" vcm_type="VCM_MFB" full_config="true">
            <inputs>
                input_y0_image, input_uv0_image,
                input_y1_image, input_uv1_image,
                input_y2_image, input_uv2_image,
                input_y3_image, input_uv3_image,
                input_y4_image, input_uv4_image,
                input_motmod_image,
                wmult_buff_image, refweight_buff_image,
                pgain_buff_image, poffset_buff_image
            </inputs>
            <outputs>
                output_y_image_iva, output_uv_image_iva,
                output_mmap_image_iva
            </outputs>
            <depends> </depends>
            <triggers> </triggers>
            <tile_config tile_width="144" tile_height="128" />
            <node_config sched_id="5, 6, 7">
                <vdma_id>
                    6, 0, 14, 1, 2, 7
                </vdma_id>
                <vcm_vcf_buffers>
                    MFB_VCF_VCM_VALS,
                    MFB_VCF_BLD_IN_MOT_MOD_PING,
                    MFB_VCF_BLD_IN_MOT_MOD_PONG,
                    MFB_VCF_BLD_IN_Y0_PING,
                    MFB_VCF_BLD_IN_Y1_PING,
                    MFB_VCF_BLD_IN_Y2_PING,
                    MFB_VCF_BLD_IN_Y3_PING,
                    MFB_VCF_BLD_IN_Y4_PING,
                    MFB_VCF_BLD_IN_Y0_PONG,
                    MFB_VCF_BLD_IN_Y1_PONG,
                    MFB_VCF_BLD_IN_Y2_PONG,
                    MFB_VCF_BLD_IN_Y3_PONG,
                    MFB_VCF_BLD_IN_Y4_PONG,
                    MFB_VCF_BLD_IN_U0_PING,
                    MFB_VCF_BLD_IN_U1_PING,
                    MFB_VCF_BLD_IN_U2_PING,
                    MFB_VCF_BLD_IN_U3_PING,
                    MFB_VCF_BLD_IN_U4_PING,
                    MFB_VCF_BLD_IN_U0_PONG,
                    MFB_VCF_BLD_IN_U1_PONG,
                    MFB_VCF_BLD_IN_U2_PONG,
                    MFB_VCF_BLD_IN_U3_PONG,
                    MFB_VCF_BLD_IN_U4_PONG,
                    MFB_VCF_BLD_IN_V0_PING,
                    MFB_VCF_BLD_IN_V1_PING,
                    MFB_VCF_BLD_IN_V2_PING,
                    MFB_VCF_BLD_IN_V3_PING,
                    MFB_VCF_BLD_IN_V4_PING,
                    MFB_VCF_BLD_IN_V0_PONG,
                    MFB_VCF_BLD_IN_V1_PONG,
                    MFB_VCF_BLD_IN_V2_PONG,
                    MFB_VCF_BLD_IN_V3_PONG,
                    MFB_VCF_BLD_IN_V4_PONG,
                    MFB_VCF_BLD_OUT_Y_PING,
                    MFB_VCF_BLD_OUT_Y_PONG,
                    MFB_VCF_BLD_OUT_U_PING,
                    MFB_VCF_BLD_OUT_U_PONG,
                    MFB_VCF_BLD_OUT_V_PING,
                    MFB_VCF_BLD_OUT_V_PONG,
                    MFB_VCF_BLD_OUT_MMAP_PING,
                    MFB_VCF_BLD_OUT_MMAP_PONG,
                </vcm_vcf_buffers>
            </node_config>
        </iva_entry>
    </iva_table>

</graph>
