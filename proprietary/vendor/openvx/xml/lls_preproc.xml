<?xml version="1.0" encoding="utf-8"?>
<graph id="lls_preproc">
    <!-- setting for Samsung OpenVX Framework -->
    <skipstages>
        <skip_stage_list flags="SVX_STAGE_SKIP_UPDATE_GST" />
        <skip_stage_list flags="SVX_STAGE_SKIP_ROI_TEST" />
    </skipstages>
    <nodes>
        <!-- Nodes: -->
        <!-- Still ENF Nodes. -->
        <still_enf_node_slice0 id="0" />
        <still_enf_node_slice1 id="1" />
        <still_enf_node_slice2 id="2" />
        <still_enf_node_slice3 id="3" />
        <still_enf_uv_node id="4" />
        <!-- Still Pyramid Nodes. -->
        <still_pyr_node_l1_slice0 id="5" />
        <still_pyr_node_l1_slice1 id="6" />
        <still_pyr_node_l1_slice2 id="7" />
        <still_pyr_node_l1_slice3 id="8" />
        <still_pyr_node_l2_slice0 id="9" />
        <!-- Still ORBMCH Scale 2 Nodes. -->
        <still_vcm_orb_l1_region_0 id="10" />
        <still_mch_l1_region_0_frame0 id="11" />
        <still_mch_l1_region_0_frame1 id="12" />
        <still_mch_l1_region_0_frame2 id="13" />
        <still_mch_l1_region_0_frame3 id="14" />
        <still_vcm_orb_l1_region_1 id="15" />
        <still_mch_l1_region_1_frame0 id="16" />
        <still_mch_l1_region_1_frame1 id="17" />
        <still_mch_l1_region_1_frame2 id="18" />
        <still_mch_l1_region_1_frame3 id="19" />
        <still_vcm_orb_l1_region_2 id="20" />
        <still_mch_l1_region_2_frame0 id="21" />
        <still_mch_l1_region_2_frame1 id="22" />
        <still_mch_l1_region_2_frame2 id="23" />
        <still_mch_l1_region_2_frame3 id="24" />
        <still_vcm_orb_l1_region_3 id="25" />
        <still_mch_l1_region_3_frame0 id="26" />
        <still_mch_l1_region_3_frame1 id="27" />
        <still_mch_l1_region_3_frame2 id="28" />
        <still_mch_l1_region_3_frame3 id="29" />
        <still_vcm_orb_l1_region_4 id="30" />
        <still_mch_l1_region_4_frame0 id="31" />
        <still_mch_l1_region_4_frame1 id="32" />
        <still_mch_l1_region_4_frame2 id="33" />
        <still_mch_l1_region_4_frame3 id="34" />
        <still_vcm_orb_l1_region_5 id="35" />
        <still_mch_l1_region_5_frame0 id="36" />
        <still_mch_l1_region_5_frame1 id="37" />
        <still_mch_l1_region_5_frame2 id="38" />
        <still_mch_l1_region_5_frame3 id="39" />
        <still_vcm_orb_l1_region_6 id="40" />
        <still_mch_l1_region_6_frame0 id="41" />
        <still_mch_l1_region_6_frame1 id="42" />
        <still_mch_l1_region_6_frame2 id="43" />
        <still_mch_l1_region_6_frame3 id="44" />
        <still_vcm_orb_l1_region_7 id="45" />
        <still_mch_l1_region_7_frame0 id="46" />
        <still_mch_l1_region_7_frame1 id="47" />
        <still_mch_l1_region_7_frame2 id="48" />
        <still_mch_l1_region_7_frame3 id="49" />
        <!-- Still ORBMCH Scale 8 Nodes. -->
        <still_vcm_orb_l2_region_0 id="50" />
        <still_mch_l2_region_0_frame0 id="51" />
        <still_mch_l2_region_0_frame1 id="52" />
        <still_mch_l2_region_0_frame2 id="53" />
        <still_mch_l2_region_0_frame3 id="54" />
    </nodes>

    <buffers>
        <!-- DDR Buffers: -->
        <!-- Still ENF Buffers. -->
        <ddr_buffer id="ddr_still_enf_input_slice_0" node="still_enf_node_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_0" node="still_enf_node_slice0" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_0" node="still_enf_node_slice0" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_cfg" node="still_enf_node_slice0" param_idx="2"  />
        <ddr_buffer id="ddr_still_enf_input_slice_1" node="still_enf_node_slice1" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_1" node="still_enf_node_slice1" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_1" node="still_enf_node_slice1" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_input_slice_2" node="still_enf_node_slice2" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_2" node="still_enf_node_slice2" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_2" node="still_enf_node_slice2" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_input_slice_3" node="still_enf_node_slice3" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_mot_slice_3" node="still_enf_node_slice3" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_out_slice_3" node="still_enf_node_slice3" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_uv_input" node="still_enf_uv_node" param_idx="0"  />
        <ddr_buffer id="ddr_still_enf_u_out" node="still_enf_uv_node" param_idx="5"  />
        <ddr_buffer id="ddr_still_enf_v_out" node="still_enf_uv_node" param_idx="6"  />
        <ddr_buffer id="ddr_still_enf_uv_mot" node="still_enf_uv_node" param_idx="1"  />
        <ddr_buffer id="ddr_still_enf_uv_cfg" node="still_enf_uv_node" param_idx="2"  />
        <!-- Still Pyramid Buffers. -->
        <ddr_buffer id="ddr_still_pyr_in_l1_slice0" node="still_pyr_node_l1_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice0" node="still_pyr_node_l1_slice0" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice1" node="still_pyr_node_l1_slice1" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice1" node="still_pyr_node_l1_slice1" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice2" node="still_pyr_node_l1_slice2" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice2" node="still_pyr_node_l1_slice2" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_in_l1_slice3" node="still_pyr_node_l1_slice3" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l1_slice3" node="still_pyr_node_l1_slice3" param_idx="7"  />
        <ddr_buffer id="ddr_still_pyr_coeff_l2" node="still_pyr_node_l2_slice0" param_idx="4"  />
        <ddr_buffer id="ddr_still_pyr_in_l2_slice0" node="still_pyr_node_l2_slice0" param_idx="0"  />
        <ddr_buffer id="ddr_still_pyr_out_l2_slice0" node="still_pyr_node_l2_slice0" param_idx="7"  />
        <!-- Still ORBMCH Buffers. -->
        <ddr_buffer id="ddr_still_orb_image_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_0" node="still_vcm_orb_l1_region_0" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_db" node="still_mch_l1_region_0_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_query" node="still_mch_l1_region_0_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame0_out" node="still_mch_l1_region_0_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame1_query" node="still_mch_l1_region_0_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame1_out" node="still_mch_l1_region_0_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame2_query" node="still_mch_l1_region_0_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame2_out" node="still_mch_l1_region_0_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame3_query" node="still_mch_l1_region_0_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_0_frame3_out" node="still_mch_l1_region_0_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_1" node="still_vcm_orb_l1_region_1" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_db" node="still_mch_l1_region_1_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_query" node="still_mch_l1_region_1_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame0_out" node="still_mch_l1_region_1_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame1_query" node="still_mch_l1_region_1_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame1_out" node="still_mch_l1_region_1_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame2_query" node="still_mch_l1_region_1_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame2_out" node="still_mch_l1_region_1_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame3_query" node="still_mch_l1_region_1_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_1_frame3_out" node="still_mch_l1_region_1_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_2" node="still_vcm_orb_l1_region_2" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_db" node="still_mch_l1_region_2_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_query" node="still_mch_l1_region_2_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame0_out" node="still_mch_l1_region_2_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame1_query" node="still_mch_l1_region_2_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame1_out" node="still_mch_l1_region_2_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame2_query" node="still_mch_l1_region_2_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame2_out" node="still_mch_l1_region_2_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame3_query" node="still_mch_l1_region_2_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_2_frame3_out" node="still_mch_l1_region_2_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_3" node="still_vcm_orb_l1_region_3" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_db" node="still_mch_l1_region_3_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_query" node="still_mch_l1_region_3_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame0_out" node="still_mch_l1_region_3_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame1_query" node="still_mch_l1_region_3_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame1_out" node="still_mch_l1_region_3_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame2_query" node="still_mch_l1_region_3_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame2_out" node="still_mch_l1_region_3_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame3_query" node="still_mch_l1_region_3_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_3_frame3_out" node="still_mch_l1_region_3_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_4" node="still_vcm_orb_l1_region_4" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_db" node="still_mch_l1_region_4_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_query" node="still_mch_l1_region_4_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame0_out" node="still_mch_l1_region_4_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame1_query" node="still_mch_l1_region_4_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame1_out" node="still_mch_l1_region_4_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame2_query" node="still_mch_l1_region_4_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame2_out" node="still_mch_l1_region_4_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame3_query" node="still_mch_l1_region_4_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_4_frame3_out" node="still_mch_l1_region_4_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_5" node="still_vcm_orb_l1_region_5" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_db" node="still_mch_l1_region_5_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_query" node="still_mch_l1_region_5_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame0_out" node="still_mch_l1_region_5_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame1_query" node="still_mch_l1_region_5_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame1_out" node="still_mch_l1_region_5_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame2_query" node="still_mch_l1_region_5_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame2_out" node="still_mch_l1_region_5_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame3_query" node="still_mch_l1_region_5_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_5_frame3_out" node="still_mch_l1_region_5_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_6" node="still_vcm_orb_l1_region_6" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_db" node="still_mch_l1_region_6_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_query" node="still_mch_l1_region_6_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame0_out" node="still_mch_l1_region_6_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame1_query" node="still_mch_l1_region_6_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame1_out" node="still_mch_l1_region_6_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame2_query" node="still_mch_l1_region_6_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame2_out" node="still_mch_l1_region_6_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame3_query" node="still_mch_l1_region_6_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_6_frame3_out" node="still_mch_l1_region_6_frame3" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_orb_image_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l1_region_7" node="still_vcm_orb_l1_region_7" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_db" node="still_mch_l1_region_7_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_query" node="still_mch_l1_region_7_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame0_out" node="still_mch_l1_region_7_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame1_query" node="still_mch_l1_region_7_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame1_out" node="still_mch_l1_region_7_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame2_query" node="still_mch_l1_region_7_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame2_out" node="still_mch_l1_region_7_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame3_query" node="still_mch_l1_region_7_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l1_region_7_frame3_out" node="still_mch_l1_region_7_frame3" param_idx="2" transfer="both" />
        <!-- Still ORBMCH Buffers. -->
        <ddr_buffer id="ddr_still_orb_image_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="0"  />
        <ddr_buffer id="ddr_still_orb_kpt_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="8"  />
        <ddr_buffer id="ddr_still_orb_dsc_l2_region_0" node="still_vcm_orb_l2_region_0" param_idx="9"  />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_db" node="still_mch_l2_region_0_frame0" param_idx="0" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_query" node="still_mch_l2_region_0_frame0" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame0_out" node="still_mch_l2_region_0_frame0" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame1_query" node="still_mch_l2_region_0_frame1" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame1_out" node="still_mch_l2_region_0_frame1" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame2_query" node="still_mch_l2_region_0_frame2" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame2_out" node="still_mch_l2_region_0_frame2" param_idx="2" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame3_query" node="still_mch_l2_region_0_frame3" param_idx="1" transfer="both" />
        <ddr_buffer id="ddr_still_mch_l2_region_0_frame3_out" node="still_mch_l2_region_0_frame3" param_idx="2" transfer="both" />

        <!-- VCF buffers for Pyramid Node -->
        <vcf_buffer id="vcf_pyr0_in_still" addr="0x37040" size="0x3600" />
        <vcf_buffer id="vcf_pyr0_out" addr="0x68640" size="0x1700" />
        <vcf_buffer id="vcf_pyr0_coeff" addr="0x37040" size="0x200" />
        <vcf_buffer id="vcf_pyr1_in_still" addr="0x69d40" size="0x3600" />
        <vcf_buffer id="vcf_pyr1_out" addr="0x3a640" size="0x1700" />

        <!-- VCF Input buffers for ENF Node. -->
        <vcf_buffer id="vcf_enf_in" addr="0x00000" size="0x10000" />
        <vcf_buffer id="uv_enf_vcm_vcf_input0" addr="0x00000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input1" addr="0x07ec0" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input2" addr="0x10000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_input3" addr="0x17ec0" size="0x7ec0" />

        <!-- VCF Motion Map buffers for ENF Node. -->
        <vcf_buffer id="vcf_enf_mot_still" addr="0x60000" size="0x1080" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still0" addr="0x60000" size="0x2220" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still1" addr="0x62220" size="0x2220" />
        <vcf_buffer id="uv_enf_vcm_vcf_mmap_still_dummy" addr="0x34e20" size="0x2220" />

        <!-- VCF buffer for ENF Config-->
        <vcf_buffer id="vcf_enf_cfg" addr="0x2FD80" size="0x0070" />

        <!-- VCF buffers for ENF Node VCM vals. -->
        <vcf_buffer id="uv_enf_vcm_vcf_buffer_still" addr="0x3bd40" size="0x1b60" />

        <!-- VCF buffers for ENF Node Output. -->
        <vcf_buffer id="vcf_enf_out_still" addr="0x70000" size="0x10000" />
        <vcf_buffer id="vcf_enf_out_shift16_still" addr="0x70010" size="0x10000" />
        <vcf_buffer id="uv_enf_vcm_vcf_output0_still" addr="0x20000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output1_still" addr="0x27ec0" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output2_still" addr="0x70000" size="0x7ec0" />
        <vcf_buffer id="uv_enf_vcm_vcf_output3_still" addr="0x77ec0" size="0x7ec0" />

        <!-- VCF buffers for ORB Node Input. -->
        <vcf_buffer id="orb_vcm_vcf_input0" addr="0x40000" size="0x10000" />
        <vcf_buffer id="orb_vcm_vcf_input1" addr="0x50000" size="0x10000" />

        <!-- VCF buffers for ORB Node Output. -->
        <vcf_buffer id="orb_vcm_vcf_output0" addr="0x64440" size="0x1390" />
        <vcf_buffer id="orb_vcm_vcf_output1" addr="0x30000" size="0x2710" />

        <!-- VCF buffers for ORB VCM Vals. -->
        <vcf_buffer id="orb_vcm_vcf_buffer" addr="0x6d340" size="0x100" />

        <!-- Vcf buffers for MCH. -->
        <vcf_buffer id="vcf_mch_db" addr="0x657d0" size="0x2710" />
        <vcf_buffer id="vcf_mch_query" addr="0x32710" size="0x2710" />
        <vcf_buffer id="vcf_mch_out" addr="0x67ee0" size="0x760" />
    </buffers>

    <iva_table>
        <!-- Pyramid LVL 1 Slice 0 START -->
        <iva_entry id="loop_start_still_lvl1_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <triggers>
                still_pyr_lvl1_in_dma_slice_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice0
            </inputs>
            <outputs>
                vcf_pyr1_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                loop_start_still_lvl1_slice_0
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_in_still
            </inputs>
            <outputs>
                vcf_pyr1_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice0" dst_dimensions="ddr_still_pyr_out_l1_slice0" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_0
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_IP_VDMA_CH8" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_0
            </depends>
            <triggers>
                still_loop_end_lvl1_0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_0" parent="still_pyr_node_l1_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_0
            </depends>
            <triggers>
                still_loop_start_lvl1_slice_2, still_vcm_start_orb_region0
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 0 END -->

        <!-- Pyramid LVL 1 Slice 1 START -->
        <iva_entry id="still_loop_start_lvl1_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <triggers>
                still_pyr_lvl1_in_dma_slice_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice1
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_1
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice1" dst_dimensions="ddr_still_pyr_out_l1_slice1" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_1
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice1
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_1
            </depends>
            <triggers>
                still_loop_end_lvl1_1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_1" parent="still_pyr_node_l1_slice1" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_1
            </depends>
            <triggers>
                still_loop_start_lvl1_slice_3, still_vcm_start_orb_region0, still_vcm_start_orb_region4,
                still_vcm_start_orb_region1, still_vcm_start_orb_region5
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 1 END -->

        <!-- Pyramid LVL 1 Slice 2 START -->
        <iva_entry id="still_loop_start_lvl1_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_loop_end_lvl1_0
            </depends>
            <triggers>
                still_pyr_lvl1_in_dma_slice_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice2
            </inputs>
            <outputs>
                vcf_pyr1_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_2
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_SCL1" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_in_still
            </inputs>
            <outputs>
                vcf_pyr1_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice2" dst_dimensions="ddr_still_pyr_out_l1_slice2" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_2
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_IP_VDMA_CH8" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr1_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice2
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_2
            </depends>
            <triggers>
                still_loop_end_lvl1_2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_2" parent="still_pyr_node_l1_slice2" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_2
            </depends>
            <triggers>
                still_vcm_start_orb_region2, still_vcm_start_orb_region6
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 2 END -->


        <!-- Pyramid LVL 1 Slice 3 START -->
        <iva_entry id="still_loop_start_lvl1_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_pyr_lvl1_in_dma_slice_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_in_dma_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l1_slice3
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl1_slice_3
            </depends>
            <triggers>
                still_pyr_lvl1_scl_slice_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_scl_slice_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l1_slice3" dst_dimensions="ddr_still_pyr_out_l1_slice3" scl_mode ="0" inter_mode="SCL_INTER_MODE_BILINEAR" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl1_in_dma_slice_3
            </depends>
            <triggers>
                still_pyr_lvl1_out_dma_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl1_out_dma_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l1_slice3
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl1_scl_slice_3
            </depends>
            <triggers>
                still_loop_end_lvl1_3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl1_3" parent="still_pyr_node_l1_slice3" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl1_out_dma_3
            </depends>
            <triggers>
                still_pyr_lvl2_coeff, still_vcm_start_orb_region3, still_vcm_start_orb_region7
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 1 Slice 3 END -->

       <!-- DMA for Pyramid LVL 2 filter coefficients -->
        <iva_entry id="still_pyr_lvl2_coeff" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_pyr_coeff_l2
            </inputs>
            <outputs>
                vcf_pyr0_coeff
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_loop_start_lvl2
             </triggers>
         </iva_entry>

        <!-- Pyramid LVL 2 START -->
        <iva_entry id="still_loop_start_lvl2" parent="still_pyr_node_l2_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="32" tile_height="32" />
            <depends>
                still_pyr_lvl2_coeff
            </depends>
            <triggers>
                still_pyr_lvl2_in_dma
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_in_dma" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_pyr_in_l2_slice0
            </inputs>
            <outputs>
                vcf_pyr0_in_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_lvl2
            </depends>
            <triggers>
                still_pyr_lvl2_scl
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_scl" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_SCL0" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_in_still
            </inputs>
            <outputs>
                vcf_pyr0_out
            </outputs>
            <node_config format="e_data_8b" src_dimensions="ddr_still_pyr_in_l2_slice0" dst_dimensions="ddr_still_pyr_out_l2_slice0" scl_mode ="0"
                         inter_mode="SCL_INTER_MODE_HIFI_BICUBIC" h_offset="0" v_offset="0" />
            <depends>
                still_pyr_lvl2_in_dma
            </depends>
            <triggers>
                still_pyr_lvl2_out_dma
            </triggers>
        </iva_entry>

        <iva_entry id="still_pyr_lvl2_out_dma" parent="still_pyr_node_l2_slice0" proc_id="IVA_IP_VDMA_CH14" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_pyr0_out
            </inputs>
            <outputs>
                ddr_still_pyr_out_l2_slice0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_pyr_lvl2_scl
            </depends>
            <triggers>
                still_loop_end_lvl2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_lvl2" parent="still_pyr_node_l2_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_pyr_lvl2_out_dma
            </depends>
            <triggers>
                still_vcm_start_orb_l2_region0
            </triggers>
        </iva_entry>
        <!-- Pyramid LVL 2 END -->

        <!-- DMA for PRE ENF Config -->
        <iva_entry id="still_enf_cfg" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_cfg
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <triggers>
                still_loop_start_enf_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice0" parent="still_enf_node_slice0" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_enf_cfg
            </depends>
            <triggers>
                still_enf_dma_in_slice0, still_enf_dma_mot_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_0
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice0
            </depends>
            <triggers>
                still_enf_process_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_0
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice0
            </depends>
            <triggers>
                still_enf_process_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_0" />
            <depends>
                still_enf_dma_in_slice0, still_enf_dma_mot_slice0
            </depends>
            <triggers>
                still_enf_dma_out_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice0" parent="still_enf_node_slice0" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_0
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice0
            </depends>
            <triggers>
                still_loop_end_enf_slice0
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice0" parent="still_enf_node_slice0" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice0
            </depends>
            <triggers>
                still_loop_start_enf_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice1" parent="still_enf_node_slice1" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice0
            </depends>
            <triggers>
                still_enf_dma_in_slice1, still_enf_dma_mot_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_1
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice1
            </depends>
            <triggers>
                still_enf_process_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_1
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice1
            </depends>
            <triggers>
                still_enf_process_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_1" />
            <depends>
                still_enf_dma_in_slice1, still_enf_dma_mot_slice1
            </depends>
            <triggers>
                still_enf_dma_out_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice1" parent="still_enf_node_slice1" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_1
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice1
            </depends>
            <triggers>
                still_loop_end_enf_slice1
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice1" parent="still_enf_node_slice1" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice1
            </depends>
            <triggers>
                still_loop_start_enf_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice2" parent="still_enf_node_slice2" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice1
            </depends>
            <triggers>
                still_enf_dma_in_slice2, still_enf_dma_mot_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_2
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice2
            </depends>
            <triggers>
                still_enf_process_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_2
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice2
            </depends>
            <triggers>
                still_enf_process_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_2" />
            <depends>
                still_enf_dma_in_slice2, still_enf_dma_mot_slice2
            </depends>
            <triggers>
                still_enf_dma_out_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice2" parent="still_enf_node_slice2" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_2
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice2
            </depends>
            <triggers>
                still_loop_end_enf_slice2
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice2" parent="still_enf_node_slice2" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice2
            </depends>
            <triggers>
                still_loop_start_enf_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_start_enf_slice3" parent="still_enf_node_slice3" proc_id="IVA_LOOP_START" flags="IVA_FLOW_CONTROL" >
            <tile_config tile_width="64" tile_height="64" />
            <depends>
                still_loop_end_enf_slice2
            </depends>
            <triggers>
                still_enf_dma_in_slice3, still_enf_dma_mot_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_in_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH4" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_input_slice_3
            </inputs>
            <outputs>
                vcf_enf_in
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice3
            </depends>
            <triggers>
                still_enf_process_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_mot_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH5" flags="IVA_FLOW_CONTROL" >
            <inputs>
                ddr_still_enf_mot_slice_3
            </inputs>
            <outputs>
                vcf_enf_mot_still
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_dram_to_sram" />
            <depends>
                still_loop_start_enf_slice3
            </depends>
            <triggers>
                still_enf_process_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_process_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_ENF" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_in, vcf_enf_mot_still, vcf_enf_cfg
            </inputs>
            <outputs>
                vcf_enf_out_still
            </outputs>
            <node_config dimensions="ddr_still_enf_input_slice_3" />
            <depends>
                still_enf_dma_in_slice3, still_enf_dma_mot_slice3
            </depends>
            <triggers>
                still_enf_dma_out_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_enf_dma_out_slice3" parent="still_enf_node_slice3" proc_id="IVA_IP_VDMA_CH13" flags="IVA_FLOW_CONTROL">
            <inputs>
                vcf_enf_out_still
            </inputs>
            <outputs>
                ddr_still_enf_out_slice_3
            </outputs>
            <node_config format="e_data_8b" xfer_dir="iva_vdma_2d_sram_to_dram" />
            <depends>
                still_enf_process_slice3
            </depends>
            <triggers>
                still_loop_end_enf_slice3
            </triggers>
        </iva_entry>

        <iva_entry id="still_loop_end_enf_slice3" parent="still_enf_node_slice3" proc_id="IVA_LOOP_END" flags="IVA_FLOW_CONTROL" >
            <depends>
                still_enf_dma_out_slice3
            </depends>
            <triggers>
                still_vcm_start_enf_uv
            </triggers>
        </iva_entry>

        <iva_entry id="still_vcm_start_enf_uv" proc_id="VCM_START" parent="still_enf_uv_node" vcm_type="VCM_UV_ENF" full_config="true">
            <inputs>
                ddr_still_enf_uv_input, ddr_still_enf_uv_mot
            </inputs>
            <outputs>
                ddr_still_enf_u_out, ddr_still_enf_v_out
            </outputs>
            <depends>
                still_loop_end_enf_slice3
            </depends>
            <tile_config tile_width="188" tile_height="136"/>
            <node_config sched_id="1">
		<vdma_id>
		        4, 5, 13
		</vdma_id>
                <vcm_vcf_buffers>
                        uv_enf_vcm_vcf_input0, uv_enf_vcm_vcf_input1, uv_enf_vcm_vcf_input2, uv_enf_vcm_vcf_input3,
                        uv_enf_vcm_vcf_output0_still, uv_enf_vcm_vcf_output1_still, uv_enf_vcm_vcf_output2_still,
                        uv_enf_vcm_vcf_output3_still, uv_enf_vcm_vcf_buffer_still, uv_enf_vcm_vcf_mmap_still0
                        uv_enf_vcm_vcf_mmap_still1, uv_enf_vcm_vcf_mmap_still_dummy
                </vcm_vcf_buffers>
                <enf_config enf_params="ddr_still_enf_uv_cfg"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region0" proc_id="VCM_START" parent="still_vcm_orb_l1_region_0" vcm_type="VCM_ORB" full_config="true" >
            <inputs>
                ddr_still_orb_image_l1_region_0
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_0, ddr_still_orb_dsc_l1_region_0
            </outputs>
            <depends>
                still_loop_end_lvl1_0, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region4
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="0" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region4" proc_id="VCM_START" parent="still_vcm_orb_l1_region_4" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_4
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_4, ddr_still_orb_dsc_l1_region_4
            </outputs>
            <depends>
                still_vcm_start_orb_region0, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region1
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="0" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region1" proc_id="VCM_START" parent="still_vcm_orb_l1_region_1" vcm_type="VCM_ORB" full_config="false" >
            <inputs>
                ddr_still_orb_image_l1_region_1
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_1, ddr_still_orb_dsc_l1_region_1
            </outputs>
            <depends>
                still_vcm_start_orb_region4, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region5
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="118" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region5" proc_id="VCM_START" parent="still_vcm_orb_l1_region_5" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_5
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_5, ddr_still_orb_dsc_l1_region_5
            </outputs>
            <depends>
                still_vcm_start_orb_region1, still_loop_end_lvl1_1
            </depends>
            <triggers>
                still_vcm_start_orb_region2
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="118" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region2" proc_id="VCM_START" parent="still_vcm_orb_l1_region_2" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_2
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_2, ddr_still_orb_dsc_l1_region_2
            </outputs>
            <depends>
                still_vcm_start_orb_region5, still_loop_end_lvl1_2
            </depends>
            <triggers>
                still_vcm_start_orb_region6
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="236" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region6" proc_id="VCM_START" parent="still_vcm_orb_l1_region_6" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_6
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_6, ddr_still_orb_dsc_l1_region_6
            </outputs>
            <depends>
                still_vcm_start_orb_region2, still_loop_end_lvl1_2
            </depends>
            <triggers>
                still_vcm_start_orb_region3
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="236" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region3" proc_id="VCM_START" parent="still_vcm_orb_l1_region_3" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_3
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_3, ddr_still_orb_dsc_l1_region_3
            </outputs>
            <depends>
                still_vcm_start_orb_region6, still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_vcm_start_orb_region7
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="354" y_offset="0"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_region7" proc_id="VCM_START" parent="still_vcm_orb_l1_region_7" vcm_type="VCM_ORB" full_config="false">
            <inputs>
                ddr_still_orb_image_l1_region_7
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l1_region_7, ddr_still_orb_dsc_l1_region_7
            </outputs>
            <depends>
                still_vcm_start_orb_region3, still_loop_end_lvl1_3
            </depends>
            <triggers>
                still_vcm_start_orb_l2_region0
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x80000" y_scale="0x80000" x_offset="354" y_offset="235"/>
            </node_config>
        </iva_entry>

        <iva_entry id="still_vcm_start_orb_l2_region0" proc_id="VCM_START" parent="still_vcm_orb_l2_region_0" vcm_type="VCM_ORB" full_config="true">
            <inputs>
                ddr_still_orb_image_l2_region_0
            </inputs>
            <outputs>
                ddr_still_orb_kpt_l2_region_0, ddr_still_orb_dsc_l2_region_0
            </outputs>
            <depends>
                still_vcm_start_orb_region7, still_loop_end_lvl2
            </depends>
            <triggers>
                still_dma_mch_region0_db, still_dma_mch_region0_frame0_query
            </triggers>
            <tile_config tile_width="256" tile_height="256" />
            <node_config sched_id="0" >
		<vdma_id>
		    6, 6, 12, 9
		</vdma_id>
                <vcm_vcf_buffers>
                    orb_vcm_vcf_input0, orb_vcm_vcf_input1,
                    orb_vcm_vcf_output0, orb_vcm_vcf_output1,
                    orb_vcm_vcf_buffer
                </vcm_vcf_buffers>
                <orb_config max_kpt="312" metadata="0x0A" diameter="21" fast_th="24" har_th="0" har_on="0" x_scale="0x200000" y_scale="0x200000" x_offset="0" y_offset="0"/>
            </node_config>
        </iva_entry>

        <!-- MCH Entries. -->
        <!-- Start of Region 0 -->
        <!-- DMA for database of region0. -->
        <iva_entry id="still_dma_mch_region0_db" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_vcm_start_orb_l2_region0
            </depends>
            <triggers>
                still_mch_region0_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region0 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame0_query" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_vcm_start_orb_l2_region0
            </depends>
            <triggers>
                still_mch_region0_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame0" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_db, still_dma_mch_region0_frame0_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame0_out, still_dma_mch_region0_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame0_out" parent="still_mch_l1_region_0_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame0
            </depends>
            <triggers>
                still_mch_region0_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame0 Loop. -->

        <!-- Loop for the MCH Region0 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame1_query" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame0
            </depends>
            <triggers>
                still_mch_region0_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame1" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame0_out, still_dma_mch_region0_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame1_out, still_dma_mch_region0_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame1_out" parent="still_mch_l1_region_0_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame1
            </depends>
            <triggers>
                still_mch_region0_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame1 Loop. -->

        <!-- Loop for the MCH Region0 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame2_query" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame1
            </depends>
            <triggers>
                still_mch_region0_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame2" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame1_out, still_dma_mch_region0_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame2_out, still_dma_mch_region0_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame2_out" parent="still_mch_l1_region_0_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame2
            </depends>
            <triggers>
                still_mch_region0_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame2 Loop. -->

        <!-- Loop for the MCH Region0 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region0_frame3_query" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_0_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame2
            </depends>
            <triggers>
                still_mch_region0_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region0_frame3" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame2_out, still_dma_mch_region0_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region0_frame3_out, still_dma_mch_region1_frame0_query, still_dma_mch_region1_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region0_frame3_out" parent="still_mch_l1_region_0_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_0_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region0 Frame3 Loop. -->
        <!-- End of Region 0 -->

        <!-- Start of Region1 -->
        <!-- DMA for database of region1. -->
        <iva_entry id="still_dma_mch_region1_db" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region1 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame0_query" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region0_frame3
            </depends>
            <triggers>
                still_mch_region1_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame0" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region0_frame3_out, still_dma_mch_region1_frame0_query, still_dma_mch_region1_db
            </depends>
            <triggers>
                still_dma_mch_region1_frame0_out, still_dma_mch_region1_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame0_out" parent="still_mch_l1_region_1_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame0
            </depends>
            <triggers>
                still_mch_region1_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame0 Loop. -->

        <!-- Loop for the MCH Region1 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame1_query" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame0
            </depends>
            <triggers>
                still_mch_region1_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame1" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame0_out, still_dma_mch_region1_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame1_out, still_dma_mch_region1_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame1_out" parent="still_mch_l1_region_1_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame1
            </depends>
            <triggers>
                still_mch_region1_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame1 Loop. -->

        <!-- Loop for the MCH Region1 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame2_query" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame1
            </depends>
            <triggers>
                still_mch_region1_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame2" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame1_out, still_dma_mch_region1_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame2_out, still_dma_mch_region1_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame2_out" parent="still_mch_l1_region_1_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame2
            </depends>
            <triggers>
                still_mch_region1_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame2 Loop. -->

        <!-- Loop for the MCH Region1 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region1_frame3_query" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_1_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame2
            </depends>
            <triggers>
                still_mch_region1_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region1_frame3" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame2_out, still_dma_mch_region1_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region1_frame3_out, still_dma_mch_region2_frame0_query, still_dma_mch_region2_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region1_frame3_out" parent="still_mch_l1_region_1_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_1_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region1 Frame3 Loop. -->
        <!-- End of Region1 -->

        <!-- Start of Region2 -->
        <!-- DMA for database of region2. -->
        <iva_entry id="still_dma_mch_region2_db" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region2 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame0_query" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region1_frame3
            </depends>
            <triggers>
                still_mch_region2_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame0" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region1_frame3_out, still_dma_mch_region2_frame0_query, still_dma_mch_region2_db
            </depends>
            <triggers>
                still_dma_mch_region2_frame0_out, still_dma_mch_region2_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame0_out" parent="still_mch_l1_region_2_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame0
            </depends>
            <triggers>
                still_mch_region2_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame0 Loop. -->

        <!-- Loop for the MCH Region2 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame1_query" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame0
            </depends>
            <triggers>
                still_mch_region2_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame1" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame0_out, still_dma_mch_region2_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame1_out, still_dma_mch_region2_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame1_out" parent="still_mch_l1_region_2_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame1
            </depends>
            <triggers>
                still_mch_region2_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame2 Loop. -->

        <!-- Loop for the MCH Region2 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame2_query" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame1
            </depends>
            <triggers>
                still_mch_region2_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame2" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame1_out, still_dma_mch_region2_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame2_out, still_dma_mch_region2_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame2_out" parent="still_mch_l1_region_2_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame2
            </depends>
            <triggers>
                still_mch_region2_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame2 Loop. -->

        <!-- Loop for the MCH Region2 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region2_frame3_query" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_2_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame2
            </depends>
            <triggers>
                still_mch_region2_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region2_frame3" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame2_out, still_dma_mch_region2_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region2_frame3_out, still_dma_mch_region3_frame0_query, still_dma_mch_region3_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region2_frame3_out" parent="still_mch_l1_region_2_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_2_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region2 Frame3 Loop. -->
        <!-- End of Region2 -->

        <!-- Start of Region3 -->
        <!-- DMA for database of region3. -->
        <iva_entry id="still_dma_mch_region3_db" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region3 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame0_query" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region2_frame3
            </depends>
            <triggers>
                still_mch_region3_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame0" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region2_frame3_out, still_dma_mch_region3_frame0_query, still_dma_mch_region3_db
            </depends>
            <triggers>
                still_dma_mch_region3_frame0_out, still_dma_mch_region3_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame0_out" parent="still_mch_l1_region_3_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame0
            </depends>
            <triggers>
                still_mch_region3_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame0 Loop. -->

        <!-- Loop for the MCH Region3 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame1_query" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame0
            </depends>
            <triggers>
                still_mch_region3_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame1" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame0_out, still_dma_mch_region3_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame1_out, still_dma_mch_region3_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame1_out" parent="still_mch_l1_region_3_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame1
            </depends>
            <triggers>
                still_mch_region3_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame1 Loop. -->

        <!-- Loop for the MCH Region3 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame2_query" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame1
            </depends>
            <triggers>
                still_mch_region3_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame2" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame1_out, still_dma_mch_region3_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame2_out, still_dma_mch_region3_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame2_out" parent="still_mch_l1_region_3_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame2
            </depends>
            <triggers>
                still_mch_region3_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame2 Loop. -->

        <!-- Loop for the MCH Region3 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region3_frame3_query" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_3_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame2
            </depends>
            <triggers>
                still_mch_region3_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region3_frame3" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame2_out, still_dma_mch_region3_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region3_frame3_out, still_dma_mch_region4_frame0_query, still_dma_mch_region4_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region3_frame3_out" parent="still_mch_l1_region_3_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_3_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region3 Frame3 Loop. -->
        <!-- End of Region3 -->

        <!-- Start of Region4 -->
        <!-- DMA for database of region4. -->
        <iva_entry id="still_dma_mch_region4_db" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region4 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame0_query" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region3_frame3
            </depends>
            <triggers>
                still_mch_region4_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame0" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region3_frame3_out, still_dma_mch_region4_frame0_query, still_dma_mch_region4_db
            </depends>
            <triggers>
                still_dma_mch_region4_frame0_out, still_dma_mch_region4_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame0_out" parent="still_mch_l1_region_4_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame0
            </depends>
            <triggers>
                still_mch_region4_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame0 Loop. -->

        <!-- Loop for the MCH Region4 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame1_query" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame0
            </depends>
            <triggers>
                still_mch_region4_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame1" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame0_out, still_dma_mch_region4_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame1_out, still_dma_mch_region4_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame1_out" parent="still_mch_l1_region_4_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame1
            </depends>
            <triggers>
                still_mch_region4_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame1 Loop. -->

        <!-- Loop for the MCH Region4 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame2_query" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame1
            </depends>
            <triggers>
                still_mch_region4_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame2" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame1_out, still_dma_mch_region4_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame2_out, still_dma_mch_region4_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame2_out" parent="still_mch_l1_region_4_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame2
            </depends>
            <triggers>
                still_mch_region4_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame2 Loop. -->

        <!-- Loop for the MCH Region4 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region4_frame3_query" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_4_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame2
            </depends>
            <triggers>
                still_mch_region4_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region4_frame3" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame2_out, still_dma_mch_region4_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region4_frame3_out, still_dma_mch_region5_frame0_query, still_dma_mch_region5_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region4_frame3_out" parent="still_mch_l1_region_4_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_4_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region4 Frame3 Loop. -->
        <!-- End of Region4 -->

        <!-- Start of Region5 -->
        <!-- DMA for database of region5. -->
        <iva_entry id="still_dma_mch_region5_db" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region5 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame0_query" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region4_frame3
            </depends>
            <triggers>
                still_mch_region5_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame0" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region4_frame3_out, still_dma_mch_region5_frame0_query, still_dma_mch_region5_db
            </depends>
            <triggers>
                still_dma_mch_region5_frame0_out, still_dma_mch_region5_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame0_out" parent="still_mch_l1_region_5_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame0
            </depends>
            <triggers>
                still_mch_region5_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame0 Loop. -->

        <!-- Loop for the MCH Region5 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame1_query" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame0
            </depends>
            <triggers>
                still_mch_region5_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame1" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame0_out, still_dma_mch_region5_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame1_out, still_dma_mch_region5_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame1_out" parent="still_mch_l1_region_5_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame1
            </depends>
            <triggers>
                still_mch_region5_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame1 Loop. -->

        <!-- Loop for the MCH Region5 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame2_query" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame1
            </depends>
            <triggers>
                still_mch_region5_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame2" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame1_out, still_dma_mch_region5_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame2_out, still_dma_mch_region5_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame2_out" parent="still_mch_l1_region_5_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame2
            </depends>
            <triggers>
                still_mch_region5_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame2 Loop. -->

        <!-- Loop for the MCH Region5 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region5_frame3_query" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_5_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame2
            </depends>
            <triggers>
                still_mch_region5_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region5_frame3" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame2_out, still_dma_mch_region5_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region5_frame3_out, still_dma_mch_region6_frame0_query, still_dma_mch_region6_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region5_frame3_out" parent="still_mch_l1_region_5_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_5_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region5 Frame3 Loop. -->
        <!-- End of Region5 -->

        <!-- Start of Region6 -->
        <!-- DMA for database of region6. -->
        <iva_entry id="still_dma_mch_region6_db" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region6 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame0_query" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region5_frame3
            </depends>
            <triggers>
                still_mch_region6_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame0" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region5_frame3_out, still_dma_mch_region6_frame0_query, still_dma_mch_region6_db
            </depends>
            <triggers>
                still_dma_mch_region6_frame0_out, still_dma_mch_region6_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame0_out" parent="still_mch_l1_region_6_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame0
            </depends>
            <triggers>
                still_mch_region6_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame0 Loop. -->

        <!-- Loop for the MCH Region6 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame1_query" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame0
            </depends>
            <triggers>
                still_mch_region6_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame1" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame0_out, still_dma_mch_region6_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame1_out, still_dma_mch_region6_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame1_out" parent="still_mch_l1_region_6_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame1
            </depends>
            <triggers>
                still_mch_region6_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame1 Loop. -->

        <!-- Loop for the MCH Region6 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame2_query" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame1
            </depends>
            <triggers>
                still_mch_region6_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame2" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame1_out, still_dma_mch_region6_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame2_out, still_dma_mch_region6_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame2_out" parent="still_mch_l1_region_6_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame2
            </depends>
            <triggers>
                still_mch_region6_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame2 Loop. -->

        <!-- Loop for the MCH Region6 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region6_frame3_query" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_6_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame2
            </depends>
            <triggers>
                still_mch_region6_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region6_frame3" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame2_out, still_dma_mch_region6_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region6_frame3_out, still_dma_mch_region7_frame0_query, still_dma_mch_region7_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region6_frame3_out" parent="still_mch_l1_region_6_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_6_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region6 Frame3 Loop. -->
        <!-- End of Region6 -->

        <!-- Start of Region7 -->
        <!-- DMA for database of region7. -->
        <iva_entry id="still_dma_mch_region7_db" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH Region7 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame0_query" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region6_frame3
            </depends>
            <triggers>
                still_mch_region7_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame0" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region6_frame3_out, still_dma_mch_region7_frame0_query, still_dma_mch_region7_db
            </depends>
            <triggers>
                still_dma_mch_region7_frame0_out, still_dma_mch_region7_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame0_out" parent="still_mch_l1_region_7_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame0
            </depends>
            <triggers>
                still_mch_region7_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame0 Loop. -->

        <!-- Loop for the MCH Region7 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame1_query" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame0
            </depends>
            <triggers>
                still_mch_region7_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame1" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame0_out, still_dma_mch_region7_frame1_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame1_out, still_dma_mch_region7_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame1_out" parent="still_mch_l1_region_7_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame1
            </depends>
            <triggers>
                still_mch_region7_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame1 Loop. -->

        <!-- Loop for the MCH Region7 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame2_query" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame1
            </depends>
            <triggers>
                still_mch_region7_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame2" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame1_out, still_dma_mch_region7_frame2_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame2_out, still_dma_mch_region7_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame2_out" parent="still_mch_l1_region_7_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame2
            </depends>
            <triggers>
                still_mch_region7_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame2 Loop. -->

        <!-- Loop for the MCH Region7 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_region7_frame3_query" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l1_region_7_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame2
            </depends>
            <triggers>
                still_mch_region7_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_region7_frame3" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame2_out, still_dma_mch_region7_frame3_query
            </depends>
            <triggers>
                still_dma_mch_region7_frame3_out, still_dma_mch_l2_region0_frame0_query, still_dma_mch_l2_region0_db
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_region7_frame3_out" parent="still_mch_l1_region_7_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l1_region_7_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>
        <!-- End of MCH Region7 Frame3 Loop. -->
        <!-- End of Region7 -->

        <!-- Start of l2_region0 -->
        <!-- DMA for database of l2_region0. -->
        <iva_entry id="still_dma_mch_l2_region0_db" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH6" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame0_db
            </inputs>
            <outputs>
                vcf_mch_db
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>

        <!-- Loop for the MCH l2_region0 Frame0. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame0_query" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame0_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_region7_frame3
            </depends>
            <triggers>
                still_mch_l2_region0_frame0
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame0" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_region7_frame3_out, still_dma_mch_l2_region0_frame0_query, still_dma_mch_l2_region0_db
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame0_out, still_dma_mch_l2_region0_frame1_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame0_out" parent="still_mch_l2_region_0_frame0" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame0_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame0
            </depends>
            <triggers>
                still_mch_l2_region0_frame1
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame0 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame1. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame1_query" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame1_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame0
            </depends>
            <triggers>
                still_mch_l2_region0_frame1
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame1" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame0_out, still_dma_mch_l2_region0_frame1_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame1_out, still_dma_mch_l2_region0_frame2_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame1_out" parent="still_mch_l2_region_0_frame1" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame1_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame1
            </depends>
            <triggers>
                still_mch_l2_region0_frame2
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame1 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame2. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame2_query" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame2_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame1
            </depends>
            <triggers>
                still_mch_l2_region0_frame2
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame2" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame1_out, still_dma_mch_l2_region0_frame2_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame2_out, still_dma_mch_l2_region0_frame3_query
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame2_out" parent="still_mch_l2_region_0_frame2" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame2_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame2
            </depends>
            <triggers>
                still_mch_l2_region0_frame3
            </triggers>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame2 Loop. -->

        <!-- Loop for the MCH l2_region0 Frame3. -->
        <!-- DMA for query. -->
        <iva_entry id="still_dma_mch_l2_region0_frame3_query" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_VDMA_CH7" flags="IVA_FLAG_NONE" >
            <inputs>
                ddr_still_mch_l2_region_0_frame3_query
            </inputs>
            <outputs>
                vcf_mch_query
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_dram_to_sram" />
            <depends>
                still_mch_l2_region0_frame2
            </depends>
            <triggers>
                still_mch_l2_region0_frame3
            </triggers>
        </iva_entry>
        <!-- MCH -->
        <iva_entry id="still_mch_l2_region0_frame3" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_MCH" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_db, vcf_mch_query
            </inputs>
            <outputs>
                vcf_mch_out
            </outputs>
            <node_config query_size="37" db_size="37" dist_mode="0" vector_size="256" num_nearest="3" output_mode="0" thresh_on="1" thresh="31" />
            <depends>
                still_dma_mch_l2_region0_frame2_out, still_dma_mch_l2_region0_frame3_query
            </depends>
            <triggers>
                still_dma_mch_l2_region0_frame3_out
            </triggers>
        </iva_entry>
        <!-- Dma out. -->
        <iva_entry id="still_dma_mch_l2_region0_frame3_out" parent="still_mch_l2_region_0_frame3" proc_id="IVA_IP_VDMA_CH15" flags="IVA_FLAG_NONE" >
            <inputs>
                vcf_mch_out
            </inputs>
            <outputs>
                ddr_still_mch_l2_region_0_frame3_out
            </outputs>
            <node_config format="e_data_128b" xfer_dir="iva_vdma_1d_sram_to_dram" />
            <depends>
                still_mch_l2_region0_frame3
            </depends>
        </iva_entry>
        <!-- End of MCH l2_region0 Frame3 Loop. -->
        <!-- End of l2_region0 -->
    </iva_table>

</graph>
